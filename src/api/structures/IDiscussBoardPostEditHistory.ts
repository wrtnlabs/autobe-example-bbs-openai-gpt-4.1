import { tags } from "typia";

/**
 * Represents a point-in-time snapshot of post content captured during edit, for
 * compliance, rollback, and moderation review. Each record details the edited
 * title and body, the editor, rationale, and precise timestamp.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussBoardPostEditHistory = {
  /**
   * Primary Key. Unique identifier for the post edit history entry.
   * Auto-generated per edit snapshot.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The post's UUID for which this edit history record applies. References
   * discuss_board_posts.id.
   */
  post_id: string & tags.Format<"uuid">;

  /**
   * The UUID of the member who performed this edit. References
   * discuss_board_members.id.
   */
  editor_id: string & tags.Format<"uuid">;

  /**
   * Snapshot of post title after the edit. Required for historical comparison
   * and rollback support.
   */
  edited_title: string;

  /**
   * Snapshot of post body/content after the edit. Used for audit purposes,
   * viewing edit deltas, and supporting user review.
   */
  edited_body: string;

  /**
   * Optional reason/annotation provided by the editor describing the nature
   * of the change, for business compliance and transparency.
   */
  edit_reason?: string | undefined;

  /**
   * UTC timestamp when the edit occurred, required for audit and timeline
   * history.
   */
  edit_timestamp: string & tags.Format<"date-time">;
};
export namespace IDiscussBoardPostEditHistory {
  /**
   * Request payload for searching, filtering, or paginating post edit
   * histories. Used to narrow results for audit/history UIs and moderation
   * actions.
   */
  export type IRequest = {
    /**
     * Page number for pagination. The index is 1-based; the default is the
     * first page if not provided.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Maximum number of records per page for pagination. Typical values are
     * 20, 50, 100. Default determined by system policy.
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * UUID of the member who made edits. Used to filter for edit histories
     * by a specific user.
     */
    editor_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter for edit histories occurring at or after this UTC timestamp. */
    edit_timestamp_from?: (string & tags.Format<"date-time">) | undefined;

    /** Filter for edit histories occurring at or before this UTC timestamp. */
    edit_timestamp_to?: (string & tags.Format<"date-time">) | undefined;
  };

  /**
   * Summary of a single post edit history entry. Used for UI timelines, audit
   * trails, and history viewing.
   */
  export type ISummary = {
    /**
     * Unique identifier for the edit history entry. Primary key in
     * discuss_board_post_edit_histories.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Post ID associated with this edit event, enabling grouping in audit
     * trails or UI edit history displays.
     */
    post_id: string & tags.Format<"uuid">;

    /**
     * Member who performed the edit. Used for audit, rollback, and display.
     * Corresponds to discuss_board_members.id.
     */
    editor_id: string & tags.Format<"uuid">;

    /**
     * Snapshot of the post title immediately after this edit. Helps show
     * title history and change diffing.
     */
    edited_title: string;

    /**
     * Optional reason/note for the edit (user or moderator supplied). Aids
     * compliance and transparency.
     */
    edit_reason?: string | undefined;

    /**
     * Timestamp (UTC, ISO 8601) when the edit occurred. Used for timeline
     * displays/UI ordering/audit.
     */
    edit_timestamp: string & tags.Format<"date-time">;
  };
}
