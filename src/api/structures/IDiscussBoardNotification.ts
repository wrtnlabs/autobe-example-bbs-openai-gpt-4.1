import { tags } from "typia";

/**
 * Detail record for a notification delivery event in discussBoard, mapping all
 * key fields in discuss_board_notifications. Covers audit, troubleshooting,
 * compliance, and user support requirements. All UUID, string, and datetime
 * fields as defined by Prisma DB schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussBoardNotification = {
  /**
   * Primary key UUID of the notification record in
   * discuss_board_notifications.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Recipient user account for this notification, references
   * discuss_board_user_accounts.id.
   */
  user_account_id: string & tags.Format<"uuid">;

  /**
   * Optional UUID of the source post that triggered this notification.
   * References discuss_board_posts.id.
   */
  source_post_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Type of notification event (e.g., 'reply', 'moderation', 'system_alert',
   * 'password_reset'). Used for compliance/audit.
   */
  event_type: string;

  /**
   * Notification delivery channel: 'email', 'sms', 'push', 'in_app', or
   * external/webhook integrations.
   */
  delivery_channel: string;

  /**
   * Subject line or summary of the notification (required for email/SMS,
   * optional for push/in_app). Enables search, audit, and event tracking.
   */
  subject: string;

  /**
   * Main message content for the notification, may include renderable markup
   * or localization.
   */
  body: string;

  /**
   * ID assigned to this notification by external delivery systems (e.g.,
   * SMTP, SMS gateway). Enables cross-system tracing, troubleshooting, and
   * compliance audits.
   */
  external_message_id?: string | null | undefined;

  /**
   * Current message delivery statusâ€”pending, delivered, failed, bounced,
   * suppressed, etc. Managed by delivery workflow for analytics/audit.
   */
  delivery_status: string;

  /**
   * Count of delivery attempts for this notification. Used for retry
   * management and compliance logs.
   */
  delivery_attempts: number & tags.Type<"int32"> & tags.Minimum<0>;

  /**
   * Timestamp of successful notification delivery (if completed), ISO 8601
   * UTC. Enables audit and analytics.
   */
  delivered_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Detailed error from notification delivery system if failed/bounced.
   * Required for troubleshooting and monitoring integrations.
   */
  error_message?: string | null | undefined;

  /** Timestamp for notification creation (enqueue time), ISO 8601 UTC. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp for last update (status change, metadata fix), ISO 8601 UTC. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp if the notification is soft-deleted (retained for audit, hidden
   * in ordinary UIs).
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
