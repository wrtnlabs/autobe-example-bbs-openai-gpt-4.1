import { tags } from "typia";

/**
 * Password reset event/request record for business/account recovery flows.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardPasswordReset = {
  /** Unique identifier for password reset record (UUIDv4). */
  id: string & tags.Format<"uuid">;

  /** User account owning this password reset request. */
  discussion_board_user_id: string & tags.Format<"uuid">;

  /**
   * One-time, single-use password reset token string for verification flows.
   * Sensitivity: do not expose except during reset/verify.
   */
  reset_token: string;

  /** Timestamp when the reset token expires. */
  expires_at: string & tags.Format<"date-time">;

  /**
   * Date/time this reset was used (populated when password reset completed).
   * Null if reset unused/pending.
   */
  used_at?: (string & tags.Format<"date-time">) | null;

  /** When this reset request was created. */
  created_at: string & tags.Format<"date-time">;

  /** When this reset request record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft-deletion flag (timestamp if logically deleted, else null). */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IDiscussionBoardPasswordReset {
  /** Advanced query model for password reset list/search/filter. */
  export type IRequest = {
    /** User ID who owns the password reset request (optional search filter). */
    discussion_board_user_id?: string & tags.Format<"uuid">;

    /** Timestamp when reset was used (filter for pending/used). */
    used_at?: (string & tags.Format<"date-time">) | null;

    /** Only results with expires_at >= this datetime. */
    expires_at_gte?: (string & tags.Format<"date-time">) | null;

    /** Only results with expires_at <= this datetime. */
    expires_at_lte?: (string & tags.Format<"date-time">) | null;

    /** Result page number. */
    page?: number & tags.Type<"int32">;

    /** Records per page. */
    limit?: number & tags.Type<"int32">;

    /** Ordering column (optional). */
    orderBy?: string;
  };

  /**
   * Request body for updating a password reset record. Typically used to mark
   * as used or update the expiry.
   *
   * Corresponds to the discussion_board_password_resets table. Updates are
   * used for compliance after reset used, or extending expiry for
   * admin/support flows.
   */
  export type IUpdate = {
    /**
     * Date/time when the reset was used (if used). Set to null or ISO8601
     * string.
     */
    used_at?: (string & tags.Format<"date-time">) | null;

    /** Expiry timestamp for the reset token. ISO8601 datetime. */
    expires_at?: string & tags.Format<"date-time">;
  };
}
