import { tags } from "typia";

/**
 * Audit log entry for a comment deletion event on the discussion board.
 * Documents who performed the deletion, target comment, reason, optional notes,
 * and deletion timestamp. Designed for audit, compliance, appeals, and
 * transparency workflows. Data is immutable and never edited after creation.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussBoardCommentDeletionLog = {
  /**
   * Primary key for the deletion log record. Uniquely identifies the audit
   * entry.
   */
  id: string & tags.Format<"uuid">;

  /**
   * UUID of the associated comment that was deleted. Corresponds to
   * discuss_board_comments.id.
   */
  discuss_board_comment_id: string & tags.Format<"uuid">;

  /**
   * UUID of the user account who performed the deletion, traced back to
   * accountability requirements.
   */
  actor_user_account_id: string & tags.Format<"uuid">;

  /**
   * Business/policy reason for the deletion (e.g., 'self_delete',
   * 'moderation_violation', 'admin_enforcement'). Required for audit and
   * compliance review.
   */
  deletion_reason: string;

  /**
   * Optional annotation or note by the deleting actor. For compliance,
   * user-facing, or appeal purposes.
   */
  actor_note?: string | undefined;

  /**
   * RFC3339 UTC timestamp when the deletion was performed. For audit,
   * retention, and dispute resolution.
   */
  deleted_at: string & tags.Format<"date-time">;
};
export namespace IDiscussBoardCommentDeletionLog {
  /**
   * Request schema for searching or filtering comment deletion logs in the
   * audit tables. Enables pagination, filtering, and advanced audit review of
   * who deleted which comments under various policy scenarios.
   */
  export type IRequest = {
    /**
     * Page number for paginated results. Optional. Defaults to first page
     * if not specified.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of records per page (pagination limit). Optional. */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * UUID of the user account who performed the deletion. Used for
     * filtering logs to a specific actor.
     */
    actor_user_account_id?: (string & tags.Format<"uuid">) | undefined;

    /** UUID of the associated comment whose deletion log is being queried. */
    discuss_board_comment_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Deletion reason, such as 'self_delete', 'moderation_violation',
     * 'admin_enforcement'. Used for filtering logs by reason.
     */
    deletion_reason?: string | undefined;

    /** RFC3339 timestamp filtering for start of deleted_at range. */
    deleted_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** RFC3339 timestamp filtering for end of deleted_at range. */
    deleted_at_to?: (string & tags.Format<"date-time">) | undefined;
  };
}
