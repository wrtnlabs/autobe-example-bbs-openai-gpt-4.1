import { tags } from "typia";

/**
 * An audit action log (child) entry in the platform's compliance history.
 *
 * Stores status and metadata for low-level trace or compliance event. Linked to
 * parent audit log by audit_log_id.
 *
 * Directly parallels the 'discussion_board_action_logs' table.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardActionLog = {
  /** Unique identifier for the action log record. */
  id: string & tags.Format<"uuid">;

  /** Related audit log id (foreign key). */
  discussion_board_audit_log_id: string & tags.Format<"uuid">;

  /** Outcome/result of the action (e.g., 'success', 'fail', 'partial', etc). */
  status: string;

  /** Arbitrary serialized metadata, typically JSON; may be null. */
  metadata?: string | null;

  /** Timestamp of when this action log entry was created. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IDiscussionBoardActionLog {
  /**
   * Criteria for searching, paginating, and filtering audit action logs.
   *
   * Provides advanced admin workflow for compliance/status review, filtering
   * by audit_log_id, status, created_at window, text search, and output
   * ordering.
   */
  export type IRequest = {
    /** Requested page number for pagination (1-based). */
    page?: number & tags.Type<"int32">;

    /** Size limit of records per page. */
    limit?: number & tags.Type<"int32">;

    /** Filter for only actions attached to a particular audit log. */
    audit_log_id?: string & tags.Format<"uuid">;

    /** Filter actions by their status (success/fail/other). */
    status?: string;

    /** Filter: show records created from this time. */
    created_at_from?: string & tags.Format<"date-time">;

    /** Filter: show records created up to this time. */
    created_at_to?: string & tags.Format<"date-time">;

    /** Free-form search across action log metadata/content. */
    search?: string;

    /** Field to sort on (e.g., 'created_at'). */
    sort_by?: string;

    /** Sort order for returned results. */
    sort_order?: "asc" | "desc";
  };
}
