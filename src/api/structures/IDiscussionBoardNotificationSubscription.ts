import { tags } from "typia";

/**
 * Full notification subscription record, representing a user's intent to
 * subscribe to events on a platform entity.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardNotificationSubscription = {
  /** Unique notification subscription record ID. */
  id: string & tags.Format<"uuid">;

  /** UUID of the subscribing user. */
  user_id: string & tags.Format<"uuid">;

  /**
   * Type of target entity being followed (e.g., post, thread, category, tag,
   * user)
   */
  subscription_target_type: string;

  /** UUID of the specific target entity. */
  subscription_target_id: string & tags.Format<"uuid">;

  /** Datetime this subscription was created. */
  created_at: string & tags.Format<"date-time">;

  /** When this subscription was removed (unsubscribed, audit). */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IDiscussionBoardNotificationSubscription {
  /**
   * Request filter and pagination model for searching notification
   * subscriptions belonging to the current user.
   */
  export type IRequest = {
    /** Pagination: page number (1-based). Optional. */
    page?: number & tags.Type<"int32">;

    /** Pagination: number of items per page (default 20). Optional. */
    limit?: number & tags.Type<"int32">;

    /**
     * The type of entity being subscribed to (e.g., post, thread, category,
     * tag).
     */
    subscription_target_type?: string;

    /** Sort predicate (optional). */
    sort?: string;

    /** Free-text search within subscription metadata (optional). */
    keyword?: string;
  };

  /** Summary view of a notification subscription for listing purposes. */
  export type ISummary = {
    /** Unique id of the notification subscription record. */
    id: string & tags.Format<"uuid">;

    /** UUID of the user who owns this subscription. */
    user_id: string & tags.Format<"uuid">;

    /**
     * The type of entity being subscribed to (post, thread, tag, category,
     * etc.)
     */
    subscription_target_type: string;

    /** UUID of the target entity for the subscription. */
    subscription_target_id: string & tags.Format<"uuid">;

    /** Datetime when the subscription was created (ISO8601). */
    created_at: string & tags.Format<"date-time">;

    /**
     * Datetime the subscription was deleted (unsubscribed), or null if
     * active.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * Fields allowed for updating a user's notification subscription. Only
   * properties provided are changed.
   */
  export type IUpdate = {
    /** Type of entity being updated/followed (e.g., post, thread, category) */
    subscription_target_type?: string;

    /** Identifier of the target entity being updated (uuid) */
    subscription_target_id?: string & tags.Format<"uuid">;

    /**
     * When the subscription was changed to unsubscribed (nullable, ISO8601
     * UTC)
     */
    deleted_at?: (string & tags.Format<"date-time">) | null;
  };
}
