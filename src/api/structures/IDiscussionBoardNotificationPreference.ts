import { tags } from "typia";

/**
 * User-level notification channel, frequency, and category preferences for
 * system events, messages, replies, etc.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardNotificationPreference = {
  /** Unique identifier for the notification preference object. */
  id: string & tags.Format<"uuid">;

  /** ID of the user these preferences belong to (owner). */
  user_id: string & tags.Format<"uuid">;

  /** Whether email notifications are enabled for these categories/events. */
  email_enabled: boolean;

  /** Whether push notifications (e.g. app/mobile) are enabled. */
  push_enabled: boolean;

  /**
   * Whether in-app notification delivery is enabled (notification center,
   * popups, etc).
   */
  in_app_enabled: boolean;

  /**
   * Delivery frequency; values like
   * 'immediate','digest_daily','digest_weekly', etc.
   */
  frequency: string;

  /**
   * CSV or JSON-encoded list of categories/types this preference config
   * applies to.
   */
  categories: string;

  /**
   * (Nullable) If present, suppresses all notifications until this timestamp
   * (muted state for DND, vacation, etc).
   */
  mute_until?: (string & tags.Format<"date-time">) | null;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last modified timestamp for the record. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IDiscussionBoardNotificationPreference {
  /**
   * Search/filter/pagination for notification preference lookup for the
   * authenticated user.
   */
  export type IRequest = {
    /** Optionally filter by email notification enabled state. Optional. */
    email_enabled?: boolean;

    /** Optionally filter by push notification enabled state. Optional. */
    push_enabled?: boolean;

    /** Optionally filter by in-app notification enabled state. Optional. */
    in_app_enabled?: boolean;

    /**
     * Filter by notification delivery frequency (e.g.,
     * 'immediate','digest_daily','digest_weekly'). Optional.
     */
    frequency?: string;

    /** Filter by CSV or JSON categories this preference covers. Optional. */
    categories?: string;

    /** Page number for paginated result. */
    page?: number;

    /** Records per result page. */
    limit?: number;

    /** Sort rule or key (e.g., 'frequency','categories','-created_at'). */
    sort?: string;

    /** Free-text search/filtering of category names or settings. */
    q?: string;
  };

  /**
   * Update properties for notification channel preferences. All properties
   * are optional. Used to change notification delivery channel settings,
   * event categories, frequency, or mute interval.
   */
  export type IUpdate = {
    /**
     * Whether emails are enabled for this user notification category
     * preference.
     */
    email_enabled?: boolean;

    /** Whether push notifications are enabled for this user preference. */
    push_enabled?: boolean;

    /** Whether in-app notifications are enabled for this preference. */
    in_app_enabled?: boolean;

    /**
     * Frequency of notifications (e.g. 'immediate', 'digest_daily',
     * 'digest_weekly').
     */
    frequency?: string;

    /**
     * CSV or JSON string of categories this notification preference applies
     * to.
     */
    categories?: string;

    /**
     * Mute notifications until this datetime (ISO8601) or null if not
     * muted.
     */
    mute_until?: (string & tags.Format<"date-time">) | null;
  };
}
