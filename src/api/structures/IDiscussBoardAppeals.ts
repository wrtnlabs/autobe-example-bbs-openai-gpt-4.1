import { tags } from "typia";

/**
 * Schema for an individual appeal record in the discuss_board_appeals table,
 * covering all properties managed in the workflow and audit process.
 *
 * This is returned on detail or list endpoints allowing platform staff or the
 * appellant to view all fields, history, and status for a specific appeal.
 * Integrates with the platform's compliance, fairness, and workflow
 * frameworks.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussBoardAppeals = {
  /**
   * The unique identifier of the appeal record in the discuss_board_appeals
   * table.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The identifier for the moderation action that this appeal references.
   *
   * Permits backward pointer for auditing workflows and tracking the
   * lifecycle of moderation and appeals.
   */
  moderation_action_id: string & tags.Format<"uuid">;

  /**
   * The member account identifier who submitted the appeal.
   *
   * Used to track appeals per user, allowing users, moderators, or
   * administrators to retrieve history and administer process privileges.
   */
  appellant_member_id: string & tags.Format<"uuid">;

  /**
   * The detailed rationale for the appeal provided at creation or after
   * subsequent updates.
   *
   * Enables moderators and administrators to review, assess, and respond
   * fairly to the appellant's argument.
   */
  appeal_rationale: string;

  /**
   * Current status of the appeal in the workflow: e.g. pending, in_review,
   * accepted, denied, closed, or escalated.
   *
   * Governs the state machine for the appeals process and ensures compliance
   * with defined escalation and resolution rules.
   */
  status: string;

  /**
   * Business or administrative notes entered at appeal review/closure
   * describing how the decision was made and any relevant regulatory defense
   * or narrative.
   *
   * Optional, typically filled by review staff or moderators.
   */
  resolution_notes?: string | null | undefined;

  /**
   * Timestamp when the appeal was initially submitted (ISO 8601 format, UTC).
   *
   * Critical for tracking the appeals window and timing compliance.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the appeal was last updated (ISO 8601, UTC).
   *
   * Triggers workflow logic and supports audit trail for all state changes,
   * argument revisions, or outcome update events.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the appeal record was soft-deleted (for audit compliance),
   * if applicable.
   *
   * Null if the record is still active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IDiscussBoardAppeals {
  /**
   * Payload for updating or responding to an existing appeal record within
   * the discussBoard platform.
   *
   * Permits revision of the appeal rationale, status transitions according to
   * the workflow (pending, in_review, resolved, etc.), and provides slots for
   * administrative resolution notes.
   */
  export type IUpdate = {
    /**
     * Updated rationale or additional evidence presented for
     * reconsideration of the appeal.
     *
     * Allows the appellant or system administrator to present a revised
     * argument or supporting information for the appeal workflow.
     *
     * This field is important in the iterative appeals process, providing
     * users an opportunity to strengthen their case with further detail.
     */
    appeal_rationale?: string | undefined;

    /**
     * Status of the appeal workflow: pending, in_review, accepted, denied,
     * closed, escalated, etc.
     *
     * Updates to status trigger changes in backend workflow, affect audit
     * logging, and may initiate notifications or other business logic.
     *
     * System typically restricts status transitions to defined workflows
     * for legal and business compliance.
     */
    status?: string | undefined;

    /**
     * Administrative notes or rationale from platform staff or moderators
     * upon review and resolution of the appeal.
     *
     * Captured during the appeals process to ensure full transparency,
     * audit traceability, and user notification of outcome and reasoning.
     *
     * Resolution notes are retained for compliance and regulatory defense.
     */
    resolution_notes?: string | undefined;
  };
}
