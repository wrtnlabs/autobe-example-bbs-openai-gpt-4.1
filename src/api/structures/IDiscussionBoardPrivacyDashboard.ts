import { tags } from "typia";

/**
 * Platform's compliance privacy dashboard record. Tracks user
 * request/fulfillment for GDPR/CCPA data export, including summary dashboard
 * payload and export file URI if generated.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardPrivacyDashboard = {
  /**
   * Primary identifier of the privacy dashboard record. References compliance
   * audit event.
   */
  id: string & tags.Format<"uuid">;

  /**
   * ID of the user for whom the privacy dashboard/export is being managed,
   * referencing discussion_board_users.id.
   */
  discussion_board_user_id: string & tags.Format<"uuid">;

  /**
   * Timestamp when user or regulator requested privacy data
   * export/status/dashboard.
   */
  access_requested_at: string & tags.Format<"date-time">;

  /** Timestamp when export/request was completed (null if not done yet). */
  access_fulfilled_at?: (string & tags.Format<"date-time">) | null;

  /**
   * Structured JSON or string payload of user's privacy/data export summary,
   * as per compliance requirement.
   */
  dashboard_payload: string;

  /** URI for download of privacy export file (if completed). */
  export_file_uri?: string | null;

  /** Datetime when record was generated. */
  created_at: string & tags.Format<"date-time">;

  /** Datetime when record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft-delete timestamp. Null for normal use. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IDiscussionBoardPrivacyDashboard {
  /**
   * Request parameters for paginated, filtered dashboard privacy export
   * listing. Used by admins for compliance audits or user dashboard export
   * management.
   */
  export type IRequest = {
    /** Optional filter to restrict privacy dashboards by user. */
    user_id?: string & tags.Format<"uuid">;

    /** Lower bound for dashboard access request time. */
    access_requested_at_from?: string & tags.Format<"date-time">;

    /** Upper bound for dashboard access request time. */
    access_requested_at_to?: string & tags.Format<"date-time">;

    /**
     * If true, filter to only fulfilled exports; if false, only
     * pending/unfulfilled.
     */
    access_fulfilled?: boolean;

    /** Requested results page number, for pagination. */
    page?: number & tags.Type<"int32"> & tags.Default<1> & tags.Minimum<1>;

    /** Max records per page. */
    limit?: number & tags.Type<"int32"> & tags.Default<50> & tags.Minimum<1>;
  };

  /**
   * Payload for creating a new privacy dashboard export/export record for
   * compliance/user request. Used by admin or system automation for data
   * subject access events.
   */
  export type ICreate = {
    /** ID of the user for whom the privacy dashboard/export is created. */
    discussion_board_user_id: string & tags.Format<"uuid">;

    /** Datetime when data export/access was requested. */
    access_requested_at: string & tags.Format<"date-time">;

    /**
     * Structured summary (JSON string) of user data or privacy content for
     * export; required for completeness.
     */
    dashboard_payload: string;

    /** URI to generated file, if export is already complete. */
    export_file_uri?: string | null;
  };

  /**
   * Updatable fields for privacy dashboard record; typically only
   * fulfillment, export data, or URIs change in lifecycle. For compliance
   * corrections/audits.
   */
  export type IUpdate = {
    /**
     * Datetime when export was fulfilled and file delivered. Null = in
     * progress.
     */
    access_fulfilled_at?: (string & tags.Format<"date-time">) | null;

    /**
     * Updated export or dashboard summary content for compliance; should be
     * re-generated if data changes for user.
     */
    dashboard_payload?: string;

    /**
     * URI for completed download; used when exported file is generated or
     * changed.
     */
    export_file_uri?: string | null;
  };
}
