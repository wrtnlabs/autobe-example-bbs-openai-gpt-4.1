import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { delete__discussionBoard_admin_threads_$threadId_posts_$postId } from "../../../../../providers/delete__discussionBoard_admin_threads_$threadId_posts_$postId";
import { AdminAuth } from "../../../../../decorators/AdminAuth";
import { AdminPayload } from "../../../../../decorators/payload/AdminPayload";

@Controller("/discussionBoard/admin/threads/:threadId/posts/:postId")
export class DiscussionboardAdminThreadsPostsController {
  /**
   * Soft delete a specific post in a thread by setting its deleted_at
   * timestamp.
   *
   * Delete a specific post within a thread by performing a soft deletion. This
   * API sets the post's deleted_at timestamp, effectively hiding the post from
   * standard user access while retaining it for compliance, moderation, or
   * later auditing. Only authorized users (the post author, moderators, or
   * admins) may invoke this operation. The operation does not erase associated
   * comments or attachments, but those may become hidden through parent
   * soft-deletion logic. A successful soft delete allows the forum to maintain
   * audit trails and supports moderator review in case of disputes or appeals.
   * If inappropriate users attempt deletion, an explicit permission denied
   * error will be returned. Attempting to delete a non-existent or
   * already-deleted post results in a 404 error with appropriate messaging.
   *
   * @param connection
   * @param threadId Unique identifier for the parent discussion thread.
   * @param postId Unique identifier for the target post within the thread.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Delete()
  public async erase(
    @AdminAuth()
    admin: AdminPayload,
    @TypedParam("threadId")
    threadId: string & tags.Format<"uuid">,
    @TypedParam("postId")
    postId: string & tags.Format<"uuid">,
  ): Promise<void> {
    try {
      return await delete__discussionBoard_admin_threads_$threadId_posts_$postId(
        {
          admin,
          threadId,
          postId,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
