import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";
import { patch__discussBoard_moderator_posts_$postId_comments_$commentId_deletionLogs } from "../../../../../../providers/patch__discussBoard_moderator_posts_$postId_comments_$commentId_deletionLogs";
import { ModeratorAuth } from "../../../../../../decorators/ModeratorAuth";
import { ModeratorPayload } from "../../../../../../decorators/payload/ModeratorPayload";

import { IPageIDiscussBoardCommentDeletionLog } from "../../../../../../api/structures/IPageIDiscussBoardCommentDeletionLog";
import { IDiscussBoardCommentDeletionLog } from "../../../../../../api/structures/IDiscussBoardCommentDeletionLog";

@Controller(
  "/discussBoard/moderator/posts/:postId/comments/:commentId/deletionLogs",
)
export class DiscussboardModeratorPostsCommentsDeletionlogsController {
  /**
   * Search paginated audit deletion logs for a comment
   * (discuss_board_comment_deletion_logs).
   *
   * This endpoint retrieves the paginated, filterable audit deletion log
   * history for a specific comment. Leverages the
   * discuss_board_comment_deletion_logs schema and its relation to comments,
   * user accounts, and delete events. Keyed by both post and comment UUID for
   * scoping; returns all deletion events, including those due to self-deletion,
   * moderator action, or administrative enforcement.
   *
   * The query supports searching/filtering by actor, deletion reason, date, and
   * auditable user notes. Only accessible by moderators or administrators for
   * compliance and investigative purposes. Returned records document who
   * deleted, the business/rationale for deletion, and exact UTC timestamp,
   * supporting transparency, appeals, and systemic compliance oversight.
   * Integrates with comment and post audit chains for forensic and legal use
   * cases.
   *
   * @param connection
   * @param postId UUID of the post containing the target comment for the log
   *   query.
   * @param commentId UUID of the target comment being queried for deletion log.
   * @param body Deletion log search and pagination parameters for audit
   *   retrieval.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @ModeratorAuth()
    moderator: ModeratorPayload,
    @TypedParam("postId")
    postId: string & tags.Format<"uuid">,
    @TypedParam("commentId")
    commentId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IDiscussBoardCommentDeletionLog.IRequest,
  ): Promise<IPageIDiscussBoardCommentDeletionLog> {
    try {
      return await patch__discussBoard_moderator_posts_$postId_comments_$commentId_deletionLogs(
        {
          moderator,
          postId,
          commentId,
          body,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
