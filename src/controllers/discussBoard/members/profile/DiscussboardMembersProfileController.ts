import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { get__discussBoard_members_$memberId_profile } from "../../../../providers/get__discussBoard_members_$memberId_profile";

import { IDiscussBoardUserProfile } from "../../../../api/structures/IDiscussBoardUserProfile";

@Controller("/discussBoard/members/:memberId/profile")
export class DiscussboardMembersProfileController {
  /**
   * Retrieve public user profile for a given member by memberId
   * (discuss_board_user_profiles table).
   *
   * Fetches and exposes the profile information for a member, drawing data from
   * the discuss_board_user_profiles table by referencing the supplied memberId.
   * Includes fields such as displayName, bio, avatarUri, location, and website,
   * as well as created_at and updated_at timestamps plus soft-deletion
   * metadata. Public visibility is enforced at application logic, while private
   * profiles or suspended/banned accounts are constrained by corresponding
   * status or business rules.
   *
   * This endpoint is accessible to all, including guests, for publicly
   * available profiles. Privacy controls for the member, such as profile
   * visibility preferences, are implemented via business logic. Related
   * endpoints include member public index listing and account detail
   * retrieval.
   *
   * @param connection
   * @param memberId Unique identifier of the target member whose profile is
   *   being retrieved.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get()
  public async at(
    @TypedParam("memberId")
    memberId: string & tags.Format<"uuid">,
  ): Promise<IDiscussBoardUserProfile> {
    try {
      return await get__discussBoard_members_$memberId_profile({
        memberId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
