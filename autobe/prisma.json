{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"discuss_board_settings","description":"Global system configuration for the discussBoard platform. Holds platform-wide settings such as max post/comment length, maintenance mode flag, notification policies, data retention periods, or any feature flag toggles. Managed exclusively by administrators, sets the foundation for all application logic and enforcement. Only one row should exist at any time.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"config_json","type":"string","description":"JSON string of system-wide configurable options such as ratios, toggle flags, policy versions, and detailed policy parameters.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp of when this settings record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last update to settings record.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[],"ginIndexes":[]},{"name":"discuss_board_forbidden_words","description":"Catalog of keywords, phrases, or regexes forbidden from user content due to policy violations (e.g., hate speech, profanity, spam). Used for filtering post and comment content at creation or update. Managed by administrators and updated as guideline policies evolve. Each word or expression is unique and case-insensitive.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"expression","type":"string","description":"Forbidden word, phrase, or regex pattern (case-insensitive).","nullable":false},{"name":"description","type":"string","description":"Administrative description, business rationale, or policy context for this forbidden word or pattern.","nullable":true},{"name":"created_at","type":"datetime","description":"Time this forbidden word or pattern was registered.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update time for this record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete flag: time this entry was removed by administrators, if applicable.","nullable":true}],"uniqueIndexes":[{"fieldNames":["expression"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"discuss_board_privacy_logs","description":"Audit records for all privacy-sensitive actions taken on user data. Entries document accesses, exports, deletions, and policy updates impacting user information, with who did it, which data subject, operation type, outcome, and timestamp. Provides a robust audit trail for privacy compliance and incident response. References user/account ids in other tables for traceability, but never stores confidential data directly.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"actor_user_account_id","type":"uuid","description":"Reference to the user account that performed the privacy-related action. {@link discuss_board_user_accounts.id}.","relation":{"name":"actorUserAccount","targetModel":"discuss_board_user_accounts","mappingName":"discuss_board_privacy_logs_of_actor_user_account_id"},"unique":false,"nullable":true},{"name":"data_subject_user_account_id","type":"uuid","description":"Reference to the data subject impacted by the action (could be same as actor, or another user). {@link discuss_board_user_accounts.id}.","relation":{"name":"dataSubjectUserAccount","targetModel":"discuss_board_user_accounts","mappingName":"discuss_board_privacy_logs_of_data_subject_user_account_id"},"unique":false,"nullable":true}],"plainFields":[{"name":"action_type","type":"string","description":"Type of privacy operation (access, export, delete, policy update, consent change, etc.).","nullable":false},{"name":"description","type":"string","description":"Business context or justification for the privacy operation, including outcome or relevant audit notes.","nullable":true},{"name":"result_status","type":"string","description":"Result of the privacy action (success, failure, partial). For audit reporting.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this action was performed (UTC).","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["actor_user_account_id","created_at"]},{"fieldNames":["data_subject_user_account_id","created_at"]}],"ginIndexes":[]},{"name":"discuss_board_consent_records","description":"Stores individual user consent events for privacy, terms of service, or other legal agreements. Contains who provided consent, policy/document version, consent action (granted, revoked, updated), and timestamp. Required for legal defensibility and to fulfill user data rights requests. Each event is preserved historicallyâ€”this table acts as an append-only log.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_account_id","type":"uuid","description":"User account giving or updating consent. {@link discuss_board_user_accounts.id}.","relation":{"name":"userAccount","targetModel":"discuss_board_user_accounts"},"unique":false,"nullable":false}],"plainFields":[{"name":"policy_type","type":"string","description":"Type of policy for which consent is being tracked (e.g. 'privacy_policy', 'terms_of_service', 'marketing_opt_in').","nullable":false},{"name":"policy_version","type":"string","description":"Version or identifier of the policy/legal document the user is consenting to.","nullable":false},{"name":"consent_action","type":"string","description":"What the event represents: (e.g. 'granted', 'revoked', 'updated').","nullable":false},{"name":"description","type":"string","description":"Optional business notes regarding the consent record, such as rationale or evidence (IP address, device, etc.).","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when this consent record/event was created (UTC).","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_account_id","policy_type","policy_version","created_at"]}],"ginIndexes":[]}]},{"filename":"schema-02-identity.prisma","namespace":"Identity","models":[{"name":"discuss_board_guests","description":"Represents unauthenticated or temporary visitors tracked for analytics, onboarding funnels, and guest-to-member conversion. Does not include any privileged actions. Linked to analytics pipelines and business event logs. Not tied to posts or comments directly.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"ip_address","type":"string","description":"IP address of the guest user for analytics and security monitoring.","nullable":false},{"name":"user_agent","type":"string","description":"User agent string representing the guest's browser/device for analytics.","nullable":false},{"name":"referer","type":"string","description":"Origin URL where the guest came from for conversion analysis.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when guest was first observed.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last analytics-update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp if guest data is anonymized for privacy removal.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["ip_address","created_at"]}],"ginIndexes":[]},{"name":"discuss_board_members","description":"Registered member accounts representing authenticated users with ability to participate. Each member can have escalation to moderator/administrator or downgrade. Linked to discuss_board_user_accounts for authentication and can be tied to discuss_board_user_profiles.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_account_id","type":"uuid","description":"User account for authentication. {@link discuss_board_user_accounts.id}","relation":{"name":"userAccount","targetModel":"discuss_board_user_accounts"},"unique":true,"nullable":false}],"plainFields":[{"name":"nickname","type":"string","description":"Member's public display nickname.","nullable":false},{"name":"status","type":"string","description":"Current status (active, suspended, banned, etc.).","nullable":false},{"name":"created_at","type":"datetime","description":"Signup timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last member profile update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft deletion or account anonymization.","nullable":true}],"uniqueIndexes":[{"fieldNames":["nickname"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]}],"ginIndexes":[]},{"name":"discuss_board_moderators","description":"Moderator role accounts, each linked to exactly one member. Grants enforcement, review, and moderation privileges. Tracks authority escalation. Has independent status and audit window for assignment/revocation.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Target member account granted moderator rights. {@link discuss_board_members.id}","relation":{"name":"member","targetModel":"discuss_board_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"assigned_by_administrator_id","type":"uuid","description":"Administrator who granted moderator role. {@link discuss_board_administrators.id}","nullable":false},{"name":"assigned_at","type":"datetime","description":"Moderator assignment timestamp.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Timestamp when moderator role was revoked, if applicable.","nullable":true},{"name":"status","type":"string","description":"Moderator role status (active, suspended, revoked).","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp for audit.","nullable":false},{"name":"updated_at","type":"datetime","description":"Update timestamp for auditing changes.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft deletion/removal from moderator pool.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["assigned_by_administrator_id"]}],"ginIndexes":[]},{"name":"discuss_board_administrators","description":"Administrator/superuser role accounts, linked to members. Possesses comprehensive management, escalation, and audit powers. May assign or revoke other roles (including moderators) and configure global system settings.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Target member promoted to administrator. {@link discuss_board_members.id}","relation":{"name":"member","targetModel":"discuss_board_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"escalated_by_administrator_id","type":"uuid","description":"Administrator who performed the escalation. {@link discuss_board_administrators.id}","nullable":false},{"name":"escalated_at","type":"datetime","description":"Promotion/assignment timestamp.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Timestamp if removed from admin role/privileges revoked.","nullable":true},{"name":"status","type":"string","description":"Administrator status (active, resigned, suspended).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp of admin role creation for auditing.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last admin role update/audit.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp to support soft delete/audit disablement.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["status"]}],"ginIndexes":[]},{"name":"discuss_board_user_accounts","description":"Core authentication/identity records for platform users. Decouples authentication from role, supporting locked-out or staged accounts, and multi-role escalation. Used as authoritative linkage for login, JWT sessions.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","description":"Unique email address identifying the platform user.","nullable":false},{"name":"password_hash","type":"string","description":"BCrypt/argon hashed password (never plain text).","nullable":false},{"name":"email_verified","type":"boolean","description":"Whether user completed email verification process required for elevated privileges.","nullable":false},{"name":"status","type":"string","description":"Account status (pending, active, locked, disabled, etc.).","nullable":false},{"name":"last_login_at","type":"datetime","description":"Timestamp of most recent login/session creation.","nullable":true},{"name":"created_at","type":"datetime","description":"Initial account creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp for credential update (e.g., password change).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Anonymization/removal date for deleted accounts.","nullable":true}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]}],"ginIndexes":[]},{"name":"discuss_board_jwt_sessions","description":"Tracks active JWT tokens and sessions for user authentication. Used for session revocation, device management, and refresh flows. Relates to discuss_board_user_accounts as FK.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_account_id","type":"uuid","description":"Foreign key to user account that owns this session. {@link discuss_board_user_accounts.id}","relation":{"name":"userAccount","targetModel":"discuss_board_user_accounts"},"unique":false,"nullable":false}],"plainFields":[{"name":"jwt_id","type":"string","description":"JWT unique identifier (jti claim).","nullable":false},{"name":"refresh_token_hash","type":"string","description":"Hashed refresh token for this session, for secure revocation.","nullable":false},{"name":"user_agent","type":"string","description":"Logged-in device/browser info for management.","nullable":false},{"name":"ip_address","type":"string","description":"Origin IP address used at login time.","nullable":false},{"name":"issued_at","type":"datetime","description":"JWT/session creation/issuance time.","nullable":false},{"name":"expires_at","type":"datetime","description":"JWT/session absolute expiration time.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Time the session was forcibly revoked before expiry.","nullable":true},{"name":"created_at","type":"datetime","description":"Session object creation time.","nullable":false},{"name":"updated_at","type":"datetime","description":"Session object last update (device status, etc.).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Date/time if session data was hard-deleted for cleanup or privacy.","nullable":true}],"uniqueIndexes":[{"fieldNames":["jwt_id"],"unique":true}],"plainIndexes":[{"fieldNames":["user_account_id","expires_at"]}],"ginIndexes":[]},{"name":"discuss_board_user_profiles","description":"Profile metadata table for user display, including avatar, bio, and optional personalization fields. Tied to a member, managed through profile-edit UIs, never independently instantiated from business perspective.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Foreign key to the registered member this profile belongs to. {@link discuss_board_members.id}","relation":{"name":"member","targetModel":"discuss_board_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"display_name","type":"string","description":"User's chosen display name for presentation (may override registered nickname).","nullable":true},{"name":"bio","type":"string","description":"Short biography or introduction written by the user (may include links, hashtags, etc.).","nullable":true},{"name":"avatar_uri","type":"uri","description":"URI to user-chosen avatar/profile image.","nullable":true},{"name":"location","type":"string","description":"Optional location or timezone string for the user.","nullable":true},{"name":"website","type":"uri","description":"Link to user's personal website (optional).","nullable":true},{"name":"created_at","type":"datetime","description":"When profile object was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp from user or admin.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for profile removal/anonymization.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["display_name"]}],"ginIndexes":[]},{"name":"discuss_board_user_notification_preferences","description":"Stores per-user notification delivery and channel preferences, such as email/SMS/push, per event-type, etc. Used to manage communication flows and compliance. Each record points to a member, must be editable via account UI.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Member account whose notification preferences are configured. {@link discuss_board_members.id}","relation":{"name":"member","targetModel":"discuss_board_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"email_notifications_enabled","type":"boolean","description":"Whether user receives system email notifications.","nullable":false},{"name":"sms_notifications_enabled","type":"boolean","description":"Whether user receives SMS notifications for critical flows.","nullable":false},{"name":"push_notifications_enabled","type":"boolean","description":"Whether user receives push notifications in mobile/web apps.","nullable":false},{"name":"newsletter_opt_in","type":"boolean","description":"Whether user agrees to receive newsletters and announcements.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when preferences were created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when preferences were last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for user opt-out or data privacy action.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[],"ginIndexes":[]}]},{"filename":"schema-03-posts.prisma","namespace":"Posts","models":[{"name":"discuss_board_posts","description":"Central table for user-created posts/topics. Each post belongs to a member (author), contains a title, body, and can be assigned tags via discuss_board_post_tags. Enforcement of edit and delete windows is managed at the application level but tracked for auditing via related snapshot tables. Post privacy/visibility controls are stored as business_status. References member as author via user/member table. Used as the target for comments, reactions, deletion logs, and moderation actions. Strictly normalized for data integrity.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"author_id","type":"uuid","description":"Author's unique identifier, references {@link discuss_board_members.id}.","relation":{"name":"author","targetModel":"discuss_board_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Title of the post, required for identification and search, 5-150 chars enforced at application layer.","nullable":false},{"name":"body","type":"string","description":"Main text content of the post, required, 10-10,000 chars enforced at application layer.","nullable":false},{"name":"business_status","type":"string","description":"Post visibility or workflow status (e.g., public, limited, private, locked, under_review). Used by access and moderation logic.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp (UTC).","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp (UTC).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp, null if not deleted.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["author_id","created_at"]},{"fieldNames":["business_status"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]},{"name":"discuss_board_post_tags","description":"Assigns tags to posts, representing a junction table for the M:N relationship between posts and tags (if tags are entity/table-based). Enforces unique tag per post constraint. Enables topic categorization, search, and filtering by tag. Referenced in post search/filter endpoints and analytics.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Linked post's {@link discuss_board_posts.id}.","relation":{"name":"post","targetModel":"discuss_board_posts"},"unique":false,"nullable":false}],"plainFields":[{"name":"tag_id","type":"uuid","description":"Tag identifier (UUID). A valid tag UUID as defined in the source tag table or system. Relation is not enforced at schema level; see documentation for tag source resolution.","nullable":false},{"name":"created_at","type":"datetime","description":"Assignment timestamp.","nullable":false}],"uniqueIndexes":[{"fieldNames":["post_id","tag_id"],"unique":true}],"plainIndexes":[{"fieldNames":["tag_id"]}],"ginIndexes":[]},{"name":"discuss_board_post_edit_histories","description":"History and audit trail of post edits for compliance and moderation review. Captures each point-in-time version of a post, including all changed content, author, and timestamps. Enables rollback, user view of edit log, and accountability for all changes. Model is append-only and never directly modified post-creation.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Original post's {@link discuss_board_posts.id}.","relation":{"name":"post","targetModel":"discuss_board_posts"},"unique":false,"nullable":false},{"name":"editor_id","type":"uuid","description":"User/member who made the edit, references {@link discuss_board_members.id}.","relation":{"name":"editor","targetModel":"discuss_board_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"edited_title","type":"string","description":"Edited title snapshot.","nullable":false},{"name":"edited_body","type":"string","description":"Edited body/content snapshot.","nullable":false},{"name":"edit_reason","type":"string","description":"Optional reason/annotation for edit (e.g., typo fix, clarification update).","nullable":true},{"name":"edit_timestamp","type":"datetime","description":"When the edit occurred (UTC).","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["post_id"]},{"fieldNames":["editor_id"]},{"fieldNames":["edit_timestamp"]}],"ginIndexes":[{"fieldName":"edited_title"},{"fieldName":"edited_body"}]},{"name":"discuss_board_post_deletion_logs","description":"Audit log capturing all deletion events for posts (soft or hard). Records who deleted the post, when, and the reason. Enables regulatory compliance, investigation, and dispute resolution. Never deleted/updated after creation; read-only audit record.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Deleted post's {@link discuss_board_posts.id}.","relation":{"name":"post","targetModel":"discuss_board_posts"},"unique":false,"nullable":false},{"name":"actor_id","type":"uuid","description":"Moderator/member/administrator who performed deletion, references existing discuss_board_members or higher privilege role.","relation":{"name":"actor","targetModel":"discuss_board_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"deletion_timestamp","type":"datetime","description":"When the deletion occurred (UTC).","nullable":false},{"name":"deletion_reason","type":"string","description":"Business or regulatory reason for deletion, e.g., user request, moderation action, policy violation. For compliance/audit.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["post_id"]},{"fieldNames":["actor_id"]},{"fieldNames":["deletion_timestamp"]}],"ginIndexes":[]}]},{"filename":"schema-04-comments.prisma","namespace":"Comments","models":[{"name":"discuss_board_comments","description":"Stores all comments in the discussion board, supporting nested replies via parent-child relationships. Each comment references the original post, its parent comment if a reply, and the authoring member. Business fields include content, status, edit and delete timestamps, and a lock flag for moderation or business rule enforcement. Full-text GIN index supports search. Core to discussion and moderation.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discuss_board_post_id","type":"uuid","description":"Belonged post's {@link discuss_board_posts.id}","relation":{"name":"post","targetModel":"discuss_board_posts"},"unique":false,"nullable":false},{"name":"parent_id","type":"uuid","description":"Parent comment's {@link discuss_board_comments.id}, nullable for top-level comments.","relation":{"name":"parent","targetModel":"discuss_board_comments","mappingName":"recursive"},"unique":false,"nullable":true},{"name":"author_member_id","type":"uuid","description":"Authoring member's {@link discuss_board_members.id}","relation":{"name":"author","targetModel":"discuss_board_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"content","type":"string","description":"Content body of the comment. Min 2, max 2000 chars. Subject to moderation and full-text search.","nullable":false},{"name":"depth","type":"int","description":"Indicates depth of the comment (number of ancestor chain from post root), used for nesting enforcement. Business logic checks value up to max thread depth.","nullable":false},{"name":"is_locked","type":"boolean","description":"Flag whether the comment is locked and cannot be edited/deleted, typically due to expired edit window or moderation action.","nullable":false},{"name":"status","type":"string","description":"Business status of the comment (e.g., 'active', 'under_review', 'deleted'). Used for workflow enforcement and UI display.","nullable":false},{"name":"created_at","type":"datetime","description":"UTC timestamp of comment creation.","nullable":false},{"name":"updated_at","type":"datetime","description":"UTC timestamp of last update/modification.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft-delete timestamp; null if active, else marks deletion for audit and regulatory purposes.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["discuss_board_post_id","created_at"]},{"fieldNames":["author_member_id","created_at"]},{"fieldNames":["parent_id"]}],"ginIndexes":[{"fieldName":"content"}]},{"name":"discuss_board_comment_edit_histories","description":"Tracks all edits for comments. Each record links to its parent comment, the editing member, and stores the edit snapshot including previous content, status, and a UTC timestamp. Used for audit history, moderation, and rollback. Append-only. Never directly user-managed; subsidiary to comment.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discuss_board_comment_id","type":"uuid","description":"Target comment's {@link discuss_board_comments.id}","relation":{"name":"comment","targetModel":"discuss_board_comments"},"unique":false,"nullable":false},{"name":"editor_member_id","type":"uuid","description":"Editing member's {@link discuss_board_members.id}","relation":{"name":"editor","targetModel":"discuss_board_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"previous_content","type":"string","description":"Content of the comment prior to the edit. For audit/history/reversion. Max 2000 chars.","nullable":false},{"name":"previous_status","type":"string","description":"Value of business status field prior to edit (e.g., 'active', 'under_review', 'deleted').","nullable":false},{"name":"editor_note","type":"string","description":"Optional note from editor indicating reason for edit, user-visible in audit/history. Max 200 chars.","nullable":true},{"name":"created_at","type":"datetime","description":"UTC timestamp of this edit event (when snapshot was recorded).","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["discuss_board_comment_id","created_at"]},{"fieldNames":["editor_member_id","created_at"]}],"ginIndexes":[]},{"name":"discuss_board_comment_deletion_logs","description":"Stores every deletion event for comments, including soft-deletes and hard deletes. References comment, the deleting actor (who may be author, moderator, or admin), records deletion reason for compliance and appeals, and UTC deletion timestamp. Never managed directly by users; subsidiary log for transparency and audit.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discuss_board_comment_id","type":"uuid","description":"Target comment's {@link discuss_board_comments.id}","relation":{"name":"comment","targetModel":"discuss_board_comments"},"unique":false,"nullable":false},{"name":"actor_user_account_id","type":"uuid","description":"Deleting actor's user account {@link discuss_board_user_accounts.id} (can be author, moderator, or admin) to support all escalation cases.","relation":{"name":"actor","targetModel":"discuss_board_user_accounts"},"unique":false,"nullable":false}],"plainFields":[{"name":"deletion_reason","type":"string","description":"Enumerates reason for deletion (e.g., 'self_delete', 'moderation_violation', 'admin_enforcement'). Required for audit.","nullable":false},{"name":"actor_note","type":"string","description":"Optional note by deleting actor for audit or appeals.","nullable":true},{"name":"deleted_at","type":"datetime","description":"UTC timestamp of when deletion occurred. May differ from content's deleted_at for delayed cases.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["discuss_board_comment_id","deleted_at"]},{"fieldNames":["actor_user_account_id","deleted_at"]}],"ginIndexes":[]}]},{"filename":"schema-05-reactions.prisma","namespace":"Reactions","models":[{"name":"discuss_board_post_reactions","description":"Represents each individual reaction (like/dislike) made by a member on a specific post. Ensures exactly one reaction per member-post pair, allows toggling between reaction types, and supports complete audit trail. Related directly to {@link discuss_board_members.id} and {@link discuss_board_posts.id}. Supports soft-deletion for compliance and auditability.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discuss_board_member_id","type":"uuid","description":"Reactor member's {@link discuss_board_members.id}. Indicates which member performed the reaction.","relation":{"name":"member","targetModel":"discuss_board_members","targetField":"id"},"unique":false,"nullable":false},{"name":"discuss_board_post_id","type":"uuid","description":"Target post's {@link discuss_board_posts.id} which receives the reaction.","relation":{"name":"post","targetModel":"discuss_board_posts","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"reaction_type","type":"string","description":"Type of reaction. Either 'like' or 'dislike'. Business logic restricts to these values.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the reaction was first created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp for the most recent update to the reaction (toggle or metadata change).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp; nullable. Set when reaction is logically removed and no longer counted for aggregates.","nullable":true}],"uniqueIndexes":[{"fieldNames":["discuss_board_member_id","discuss_board_post_id"],"unique":true}],"plainIndexes":[{"fieldNames":["discuss_board_post_id","reaction_type"]},{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]}],"ginIndexes":[]},{"name":"discuss_board_comment_reactions","description":"Captures each member's explicit like/dislike reaction to a particular comment. Enforces single reaction per member-comment pair and audit-aware toggling of reaction. References {@link discuss_board_members.id} and {@link discuss_board_comments.id}. Includes soft-delete pattern for reversibility and compliance.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discuss_board_member_id","type":"uuid","description":"Member's {@link discuss_board_members.id} who reacted to the comment.","relation":{"name":"member","targetModel":"discuss_board_members","targetField":"id"},"unique":false,"nullable":false},{"name":"discuss_board_comment_id","type":"uuid","description":"Target comment's {@link discuss_board_comments.id}.","relation":{"name":"comment","targetModel":"discuss_board_comments","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"reaction_type","type":"string","description":"Type of reaction: 'like' or 'dislike'. Only one value per comment/member. Business logic enforces valid values.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp of reaction creation.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last modification (for toggling or recovery).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete; nullable. Populated when reaction is not counted in aggregates, supports logical undeletion for audit.","nullable":true}],"uniqueIndexes":[{"fieldNames":["discuss_board_member_id","discuss_board_comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["discuss_board_comment_id","reaction_type"]},{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]}],"ginIndexes":[]}]},{"filename":"schema-06-moderation.prisma","namespace":"Moderation","models":[{"name":"discuss_board_content_reports","description":"Records reports of posts or comments for moderation review. Each record tracks the reporting user, reported content (post or comment), type of content, report reason, status, and workflow timestamps. Used by moderators and administrators to triage, review, and resolve complaints submitted by members. References actors in user-related tables, and content in posts/comments. Enables searching all reports, viewing by content, user, or resolution status. Essential for strict audit trails and abuse prevention. Supports one-to-many relationships with moderation actions (an action may resolve multiple reports).","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reporter_member_id","type":"uuid","description":"Reporting user's {@link discuss_board_members.id}. References the member who submitted the report.","relation":{"name":"reporterMember","targetModel":"discuss_board_members"},"unique":false,"nullable":false},{"name":"content_post_id","type":"uuid","description":"Reported post's {@link discuss_board_posts.id}. Exactly one of content_post_id or content_comment_id must be non-null. References the reported post, if this report is for a post.","relation":{"name":"contentPost","targetModel":"discuss_board_posts"},"unique":false,"nullable":true},{"name":"content_comment_id","type":"uuid","description":"Reported comment's {@link discuss_board_comments.id}. Exactly one of content_post_id or content_comment_id must be non-null. References the reported comment, if this report is for a comment.","relation":{"name":"contentComment","targetModel":"discuss_board_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"content_type","type":"string","description":"Type of content being reported (e.g., 'post', 'comment'). Required to determine which foreign key applies. Ensures correct content reference and workflow routing.","nullable":false},{"name":"reason","type":"string","description":"Reporter-supplied reason for the report. Collected from predefined list (spam, harassment, abuse, misinformation) or freeform up to 200 characters. Used for workflow triage and full-text search by moderators.","nullable":false},{"name":"status","type":"string","description":"Current workflow status (pending, under_review, resolved, dismissed, escalated). Used for moderation queue, progress, and reporting.","nullable":false},{"name":"moderation_action_id","type":"uuid","description":"ID of the associated moderation action (if resolved). Used for historical workflow, linking to decisions/actions. Nullableâ€”assigned only when resolution occurs.","nullable":true},{"name":"created_at","type":"datetime","description":"UTC creation timestamp for the report, required for audit and chronological workflow.","nullable":false},{"name":"updated_at","type":"datetime","description":"UTC last updated timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"UTC deleted timestamp, set if report is soft deleted (for compliance).","nullable":true}],"uniqueIndexes":[{"fieldNames":["reporter_member_id","content_post_id","content_comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["moderation_action_id"]}],"ginIndexes":[{"fieldName":"reason"}]},{"name":"discuss_board_moderation_actions","description":"Tracks actionable moderation decisions (e.g., content removal, warning, user suspension) initiated as the resolution of reports or other triggers. Includes responsible moderator/admin, target content/user, type of action, reason, decision narrative, and linkage to appeal if present. Supports compliance by enabling queries by action type, actor, or content. All moderation history for audit trails is anchored here. May reference multiple reports via moderation_action_id in reports.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"moderator_id","type":"uuid","description":"Moderator/admin executing the action. {@link discuss_board_moderators.id} or {@link discuss_board_administrators.id}.","relation":{"name":"moderator","targetModel":"discuss_board_moderators"},"unique":false,"nullable":false},{"name":"target_member_id","type":"uuid","description":"Target user of action (usually the content author). {@link discuss_board_members.id}. Nullable for actions on content only (not directly on a user).","relation":{"name":"targetMember","targetModel":"discuss_board_members"},"unique":false,"nullable":true},{"name":"target_post_id","type":"uuid","description":"Target post id if action taken on post. {@link discuss_board_posts.id}.","relation":{"name":"targetPost","targetModel":"discuss_board_posts"},"unique":false,"nullable":true},{"name":"target_comment_id","type":"uuid","description":"Target comment id if action taken on comment. {@link discuss_board_comments.id}.","relation":{"name":"targetComment","targetModel":"discuss_board_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"appeal_id","type":"uuid","description":"ID of the associated appeal if present. Nullable; for business linkage only, not enforced as a FK due to circular dependency concerns. See {@link discuss_board_appeals.id}.","nullable":true},{"name":"action_type","type":"string","description":"Type of moderation action (remove_content, warn, suspend_user, ban_user, escalate, etc). Enables filtering and business logic enforcement for audit and policy.","nullable":false},{"name":"action_reason","type":"string","description":"Moderator/admin's chosen reason or rationale for action, displayed to target user and for legal/audit review.","nullable":false},{"name":"decision_narrative","type":"string","description":"Freeform optional narrative describing moderator context/analysis for final decision. Aids transparency, supports appeals/audits.","nullable":true},{"name":"status","type":"string","description":"Current status (active, reversed, escalated, completed, pending_applied). Used for tracking and workflow management. Historical records remain for all actions.","nullable":false},{"name":"created_at","type":"datetime","description":"UTC timestamp for when action was created. Used for audit/order of operations.","nullable":false},{"name":"updated_at","type":"datetime","description":"UTC timestamp of last update.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for removal from active search (audit/compliance only).","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["action_type"]},{"fieldNames":["status"]}],"ginIndexes":[{"fieldName":"action_reason"},{"fieldName":"decision_narrative"}]},{"name":"discuss_board_appeals","description":"Captures appeals submitted by users regarding moderation actions. Used to manage re-reviews and escalation workflows, ensuring fair process and business/legal compliance. Records which action is appealed, appellant user, status, rationale, and administrative resolution log. Allows independent search and workflow management, as appeals can traverse multiple moderation actions or administrators. Supports tracking appeal lifecycle (pending, in_review, accepted, denied, escalated, closed). Enables transparency and user trust.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"moderation_action_id","type":"uuid","description":"The moderation action being appealed. {@link discuss_board_moderation_actions.id}. Required for linking review chains, audit.","relation":{"name":"moderationAction","targetModel":"discuss_board_moderation_actions"},"unique":true,"nullable":false},{"name":"appellant_member_id","type":"uuid","description":"The member submitting the appeal. {@link discuss_board_members.id}.","relation":{"name":"appellantMember","targetModel":"discuss_board_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"appeal_rationale","type":"string","description":"Freeform rationale or argument provided by the appellant, explaining why the moderation action should be reconsidered. Used by administrators for re-review.","nullable":false},{"name":"status","type":"string","description":"Current workflow status (pending, in_review, accepted, denied, escalated, closed). Used in queueing, reporting, and managing the appeals process.","nullable":false},{"name":"resolution_notes","type":"string","description":"Resolution notes entered by the administrator or appellate moderator upon closing the appeal. Documents outcome for further audit or user transparency.","nullable":true},{"name":"created_at","type":"datetime","description":"UTC timestamp when appeal was submitted.","nullable":false},{"name":"updated_at","type":"datetime","description":"UTC timestamp of last update to the appeal record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deleted timestamp, if the appeal is removed from active search (for audit/compliance only).","nullable":true}],"uniqueIndexes":[{"fieldNames":["moderation_action_id"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]}],"ginIndexes":[{"fieldName":"appeal_rationale"},{"fieldName":"resolution_notes"}]},{"name":"discuss_board_moderation_logs","description":"Supports fine-grained logging of every important moderation event, action, escalation step, or workflow update. Enables detailed audit trail for compliance, transparency, and business process improvement. Logs may reference specific moderation action, appeal, or content, and capture actor, event type, details, timestamp. Used exclusively for system/logical reviewâ€”not directly managed by end users. Enables strict normalization and referential integrity. Useful for administrators and compliance investigators.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"actor_member_id","type":"uuid","description":"The user (member, moderator, or administrator) responsible for the logged event. Foreign key to either discuss_board_members, discuss_board_moderators, or discuss_board_administrators depending on context.","relation":{"name":"actorMember","targetModel":"discuss_board_members"},"unique":false,"nullable":true},{"name":"related_action_id","type":"uuid","description":"Associated moderation action. Enables workflow/event traceability. {@link discuss_board_moderation_actions.id}.","relation":{"name":"relatedAction","targetModel":"discuss_board_moderation_actions"},"unique":false,"nullable":true},{"name":"related_appeal_id","type":"uuid","description":"Associated appeal. Links log entry to appeal process where appropriate. {@link discuss_board_appeals.id}.","relation":{"name":"relatedAppeal","targetModel":"discuss_board_appeals"},"unique":false,"nullable":true},{"name":"related_report_id","type":"uuid","description":"Associated report. Enables granular linkage to the report that initiated the workflow. {@link discuss_board_content_reports.id}.","relation":{"name":"relatedReport","targetModel":"discuss_board_content_reports"},"unique":false,"nullable":true}],"plainFields":[{"name":"event_type","type":"string","description":"Type of moderation log event (report_received, action_taken, appeal_created, status_update, escalation, etc). Enables search/filter for auditing and performance review.","nullable":false},{"name":"event_details","type":"string","description":"Optional freeform field for extra detail about the log event. Documenting context may support compliance/governance.","nullable":true},{"name":"created_at","type":"datetime","description":"UTC timestamp for the log event creation for accurate audit trail.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for audit compliance. Soft deleted logs remain for reference, not shown in normal searches.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["event_type"]},{"fieldNames":["related_action_id"]},{"fieldNames":["related_appeal_id"]},{"fieldNames":["related_report_id"]}],"ginIndexes":[{"fieldName":"event_details"}]}]},{"filename":"schema-07-notification-integration.prisma","namespace":"NotificationIntegration","models":[{"name":"discuss_board_notifications","description":"Stores all outbound notification events for discussBoard platform users, covering email, SMS, push, and in-app notification deliveries. Tracks delivery status, event type (e.g., reply, moderation, system alerts), targeted user, message subject/content, and external tracking for compliance (with references to user account and source event). Enables searching/filtering notifications per user, event type, or status. Essential for troubleshooting, analytics, and compliance audits in all notification delivery workflows. {@link discuss_board_user_accounts.id} is used as the recipient reference.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_account_id","type":"uuid","description":"Intended notification recipient's {@link discuss_board_user_accounts.id} field. Captures which user should receive this notification.","relation":{"name":"userAccount","targetModel":"discuss_board_user_accounts"},"unique":false,"nullable":false},{"name":"source_post_id","type":"uuid","description":"Optional reference to source post/event that triggered the notification. Links to {@link discuss_board_posts.id} if applicable.","relation":{"name":"sourcePost","targetModel":"discuss_board_posts"},"unique":false,"nullable":true}],"plainFields":[{"name":"event_type","type":"string","description":"Type of notification event (e.g., reply, moderation, system_alert, password_reset, etc.). Drives user routing and compliance logic.","nullable":false},{"name":"delivery_channel","type":"string","description":"Notification delivery channel (e.g., email, sms, push, in_app, webhook). Determines integration and delivery workflow.","nullable":false},{"name":"subject","type":"string","description":"Notification subject line or brief summary. Required for most email/SMS; optional for in-app/push; enables full-text search.","nullable":false},{"name":"body","type":"string","description":"Notification message content. May be templated, localized, or rendered in markdown/HTML.","nullable":false},{"name":"external_message_id","type":"string","description":"ID assigned by external delivery platforms (e.g., SMTP, SMS gateway). Enables troubleshooting and compliance verification.","nullable":true},{"name":"delivery_status","type":"string","description":"Current delivery status (e.g., pending, delivered, failed, bounced, suppressed). Used for retry and compliance workflows.","nullable":false},{"name":"delivery_attempts","type":"int","description":"Number of delivery attempts made (for failed or retryable messages).","nullable":false},{"name":"delivered_at","type":"datetime","description":"Timestamp of successful delivery, if occurred. Enables delivery tracking/audit.","nullable":true},{"name":"error_message","type":"string","description":"Detailed error message if delivery failed. Useful for compliance, troubleshooting, and alerting.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the notification was created in the system (enqueue time).","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last modification to this notification record (status/process/metadata).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp if this notification is soft-deleted (hidden from normal views, retained for audit/compliance).","nullable":true}],"uniqueIndexes":[{"fieldNames":["external_message_id"],"unique":true}],"plainIndexes":[{"fieldNames":["user_account_id"]},{"fieldNames":["event_type"]},{"fieldNames":["delivery_status"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"subject"}]},{"name":"discuss_board_integration_logs","description":"Logs all key integration events between the discussBoard platform and external partners (e.g., notification delivery APIs, analytics ingestion, abuse detection/anti-spam, third-party reporting, partner API exchanges). Each record captures the integration type, status, payload, user (if applicable), and delivery metadata. Used for troubleshooting, compliance, SLA monitoring, external partner audits, and system reliability analytics. {@link discuss_board_user_accounts.id} is optionally included to relate to a user context.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_account_id","type":"uuid","description":"Optional user context for the integration event. May reference {@link discuss_board_user_accounts.id}, if the event is user-initiated or user-facing (e.g., user export, notification relay); nullable for system/system-to-system integrations.","relation":{"name":"userAccount","targetModel":"discuss_board_user_accounts"},"unique":false,"nullable":true}],"plainFields":[{"name":"integration_type","type":"string","description":"Type/category of integration event (e.g., notification_delivery, analytics, abuse_detection, partner_api, import_export, etc.). Drives business logic and compliance reporting.","nullable":false},{"name":"integration_partner","type":"string","description":"Integration partner or external service name (e.g., SendGrid, Twilio, GoogleAnalytics, Salesforce, etc.).","nullable":false},{"name":"payload","type":"string","description":"Raw payload (request/response/metadata) for audit and troubleshooting. Serialized as JSON, XML, etc.","nullable":false},{"name":"integration_status","type":"string","description":"Current status of integration event (e.g., pending, success, failed, retried, quarantined). Required for monitoring/alerting.","nullable":false},{"name":"external_reference_id","type":"string","description":"External integration reference ID (assigned by partner, e.g., job ID, transaction ID, message ID); enables cross-system tracing and compliance.","nullable":true},{"name":"triggered_event","type":"string","description":"Associated business event (e.g., post_created, comment_reported, moderation_action, user_exported). Improves analytics/monitoring granularity.","nullable":false},{"name":"error_message","type":"string","description":"Detailed error message if the integration failed or was retried. Useful for compliance and technical support.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when integration event was recorded (system UTC).","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last status update/modification.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp if event is soft-deleted (retained for audit/compliance).","nullable":true}],"uniqueIndexes":[{"fieldNames":["external_reference_id"],"unique":true}],"plainIndexes":[{"fieldNames":["integration_type"]},{"fieldNames":["integration_partner"]},{"fieldNames":["integration_status"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"payload"}]}]},{"filename":"schema-08-audit-history.prisma","namespace":"AuditHistory","models":[{"name":"discuss_board_global_audit_logs","description":"Global, cross-entity business audit log for tracking all major actions and state changes (including user activity, content edits/deletions, moderation actions, critical admin events, and consent/compliance changes). Allows compliance audits, forensic analysis, and business metric tracking. Supports both entity-specific and system-wide events, referencing the actor (user/admin/moderator) and target object (table/type/id) polymorphically. Designed for centralized history queries and external export.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"actor_id","type":"uuid","description":"ID of the actor responsible for this event (may reference discuss_board_user_accounts, discuss_board_members, discuss_board_adminstrators, etc.; polymorphic usage, so FK is not enforced).","nullable":true},{"name":"actor_type","type":"string","description":"Type of actor for this audit event. Examples: 'member', 'moderator', 'administrator', 'guest', or service/automation type.","nullable":false},{"name":"action_category","type":"string","description":"Business-level category of the audit event. E.g., 'post_edit', 'comment_delete', 'user_login', 'role_escalation', 'moderation_action', 'consent_update', etc.","nullable":false},{"name":"target_table","type":"string","description":"Target table/entity type for the affected object, e.g., 'discuss_board_posts', 'discuss_board_comments', 'discuss_board_members', etc.","nullable":false},{"name":"target_id","type":"uuid","description":"UUID of the affected object in the target table/entity. Polymorphicâ€”can refer to post/comment/user/settings as needed.","nullable":true},{"name":"event_payload","type":"string","description":"Optional serialized event details/context (JSON or text) containing pre-/post-state, reason, IP/user-agent, or expanded change info for audit/external export. NULL for events where no further details are captured.","nullable":true},{"name":"event_description","type":"string","description":"Brief human-readable description of this audit event for API search/export. Example: 'Moderator deleted a comment for violating policy.'","nullable":false},{"name":"created_at","type":"datetime","description":"Time this audit event was recorded (UTC, immutable).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete marker for this audit log record. Used for audit retention; if null, audit entry is active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["actor_type","actor_id","action_category","target_table","target_id","created_at"],"unique":true}],"plainIndexes":[{"fieldNames":["action_category","created_at"]},{"fieldNames":["target_table","target_id","created_at"]}],"ginIndexes":[{"fieldName":"event_description"}]}]}]}