{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"discussion_board_categories","description":"Represents discussion categories within the board (e.g. Politics, Economics, Society). Used for organizing posts and threads into topical groups. Supports CRUD and independent administration. Categories can have multiple tags via discussion_board_category_tag_relations. Frequently referenced by posts for content classification.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","description":"Category display name. Unique and user-facing (e.g. 'Politics').","nullable":false},{"name":"description","type":"string","description":"Human-readable description for moderators and users.","nullable":true},{"name":"is_active","type":"boolean","description":"Whether this category is currently active and visible to users.","nullable":false},{"name":"sort_order","type":"int","description":"Manual sort order for displaying categories.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when category was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when category was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft deletion; null means not deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[{"fieldNames":["is_active"]}],"ginIndexes":[]},{"name":"discussion_board_tags","description":"Vocabulary of tags that can be assigned to categories and posts. Tags enable faceted search, topic suggestions, and content filtering. Tags are managed independently; supports CRUD and list operations. Tags can be assigned to many categories (see discussion_board_category_tag_relations).","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"label","type":"string","description":"Tag label as seen by users. Must be unique (case-insensitive).","nullable":false},{"name":"description","type":"string","description":"Optional human-readable description for users/moderators.","nullable":true},{"name":"is_active","type":"boolean","description":"Whether the tag can currently be assigned.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when tag was registered.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when tag was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft deletion; null = not deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["label"],"unique":true}],"plainIndexes":[{"fieldNames":["is_active"]}],"ginIndexes":[]},{"name":"discussion_board_category_tag_relations","description":"Junction table for many-to-many relation between categories and tags. Allows a category to have multiple tags and vice versa. Only stores references; maintains referential integrity and disables duplicates. Managed internally; users assign tags to categories via admin/control panels.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_category_id","type":"uuid","description":"Linked category's {@link discussion_board_categories.id}","relation":{"name":"category","targetModel":"discussion_board_categories"},"unique":false,"nullable":false},{"name":"discussion_board_tag_id","type":"uuid","description":"Linked tag's {@link discussion_board_tags.id}","relation":{"name":"tag","targetModel":"discussion_board_tags"},"unique":false,"nullable":false}],"plainFields":[{"name":"created_at","type":"datetime","description":"Timestamp when this association was created.","nullable":false}],"uniqueIndexes":[{"fieldNames":["discussion_board_category_id","discussion_board_tag_id"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"discussion_board_settings","description":"Holds global/system-wide configuration values (e.g., max post length, flags thresholds, maintenance flags). Settings are key-value, with standard metadata, allowing dynamic system reconfiguration without code deployments. Supports secure audit of changes.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"key","type":"string","description":"Unique identifier for this setting (e.g. 'max_post_length', 'flag_threshold').","nullable":false},{"name":"value","type":"string","description":"Serialized config value for interpretation by the app (stringified JSON for complex data if needed).","nullable":false},{"name":"description","type":"string","description":"Human-intelligible explanation of this setting.","nullable":true},{"name":"is_system","type":"boolean","description":"Whether this setting is system-level (vs business-level).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when setting was registered.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when setting was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft deletion.","nullable":true}],"uniqueIndexes":[{"fieldNames":["key"],"unique":true}],"plainIndexes":[{"fieldNames":["is_system"]}],"ginIndexes":[]},{"name":"discussion_board_audit_logs","description":"Audit log for all major platform actions: configuration changes, role changes, moderation decisions, and critical system events. Each record includes metadata and references to the actor where possible (e.g., user, moderator, admin). Used for legal, compliance, and business/technical auditing.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"actor_id","type":"uuid","description":"Optional reference to the acting user (visitor, user, moderator, or admin), if applicable. Null for system actions.","nullable":true},{"name":"actor_role","type":"string","description":"Role of acting entity at time of action ('visitor', 'user', 'moderator', 'admin', or 'system').","nullable":false},{"name":"action_type","type":"string","description":"Type/category of action performed (e.g., 'config_update', 'role_assignment', 'moderation', 'login').","nullable":false},{"name":"target_object","type":"string","description":"Subject entity/object of the action. E.g., which setting, user, post, etc. (Flexible string).","nullable":true},{"name":"description","type":"string","description":"Human-readable description, suited for compliance reviews.","nullable":true},{"name":"created_at","type":"datetime","description":"Action event timestamp; represents when it occurred.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["actor_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"action_type"}]},{"name":"discussion_board_action_logs","description":"Detailed per-action log entries as a subsidiary to the audit log. Used for lower-level action tracing, debugging, and advanced compliance. Each action log entry references audit logs and provides granular metadata (status, payloads, errors, etc.). Not independently user-facing; supports system/compliance tracing.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_audit_log_id","type":"uuid","description":"Reference to the master audit log entry {@link discussion_board_audit_logs.id}","relation":{"name":"auditLog","targetModel":"discussion_board_audit_logs"},"unique":false,"nullable":false}],"plainFields":[{"name":"status","type":"string","description":"Outcome of the action (e.g., 'success', 'fail', 'partial', or custom).","nullable":false},{"name":"metadata","type":"string","description":"Serialized contextual metadata (JSON). As detailed as needed for compliance or debugging.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp at which the action log was recorded.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["discussion_board_audit_log_id"]}],"ginIndexes":[]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"discussion_board_visitors","description":"Tracks anonymous or unauthenticated actors (visitors) for auditing, analytics, and potential future privilege escalation. Each record represents an individual visitor session or unique actor basis. Enables future anonymous posting privileges, per-visitor fraud detection, and regulatory compliance. No PII captured unless elevated. Provides soft deletion for retention management.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"visitor_token","type":"string","description":"Opaque, non-reversible unique token identifying a visitor. Used for session tracking and fraud detection. Never linked to PII.","nullable":false},{"name":"ip_address","type":"string","description":"IP address used to access the service. Used only for security, fraud detection, and audit; deleted/pseudonymized per policy.","nullable":true},{"name":"user_agent","type":"string","description":"User agent string or device fingerprint as received. Used for analytic and anti-abuse measures.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the visitor record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the visitor record was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the visitor record was soft-deleted (if applicable).","nullable":true}],"uniqueIndexes":[{"fieldNames":["visitor_token"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"discussion_board_users","description":"Core registered and authenticated user actors. Each represents a member with standard posting, commenting, voting, and flagging privileges. Email and username must be unique. Contains authentication and profile metadata. Subject to verification, suspension, and role escalation. Provides soft deletion for compliance.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","description":"User email address, used for login and communication. Must be unique.","nullable":false},{"name":"username","type":"string","description":"Unique username chosen by the user; displayed as handle on posts/comments.","nullable":false},{"name":"display_name","type":"string","description":"User's display name or nickname for personalized experience.","nullable":true},{"name":"password_hash","type":"string","description":"Secure password hash for authentication. Raw passwords are never stored.","nullable":false},{"name":"is_verified","type":"boolean","description":"Whether the user's email has been verified.","nullable":false},{"name":"is_suspended","type":"boolean","description":"Whether the user is currently suspended from activity.","nullable":false},{"name":"suspended_until","type":"datetime","description":"If suspended, date-time until which user cannot interact. Null if not suspended.","nullable":true},{"name":"last_login_at","type":"datetime","description":"Date-time of the user's last successful login.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the user record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the user record was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the user record was soft-deleted (if applicable).","nullable":true}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true},{"fieldNames":["username"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["is_verified","is_suspended"]}],"ginIndexes":[{"fieldName":"display_name"}]},{"name":"discussion_board_moderators","description":"Table of actors with assigned moderator status. Moderators are registered users with elevated permissions for content and user management. Assignment/removal is managed by admins; assignment events are logged externally. Includes privileged status and active window. Independent management supports auditing of promotion/demotion and moderator-specific attributes. Provides soft deletion for compliance.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"user_id","type":"uuid","description":"Associated user actor's id promoted to moderator role. Duplicates user data for audit separation and role-specific attributes.","nullable":false},{"name":"assigned_at","type":"datetime","description":"Timestamp when moderator role was assigned.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Timestamp moderator privileges were revoked, if ever. Null if currently active.","nullable":true},{"name":"is_active","type":"boolean","description":"Whether the moderator is currently active (not revoked or suspended).","nullable":false},{"name":"suspended_until","type":"datetime","description":"Moderator-specific suspension window, if applicable.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the moderator record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the moderator record was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the moderator record was soft-deleted (if applicable).","nullable":true}],"uniqueIndexes":[{"fieldNames":["user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["is_active"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"discussion_board_admins","description":"Platform/system administrators with the highest permissions. This table tracks all admin actors, with status, assignment, suspension, and audit fields. Admin management is independent for audit/control. Assignment/removal is always by root/admin. No calculated fields. Provides soft deletion for regulatory compliance.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"user_id","type":"uuid","description":"Associated user actor's id with admin role. Allows admin-specific privileges, assignment/revocation audit, and separation of admin status.","nullable":false},{"name":"assigned_at","type":"datetime","description":"Timestamp when admin status/role was granted.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Timestamp when admin privileges were revoked, if ever. Null if currently active.","nullable":true},{"name":"is_active","type":"boolean","description":"Whether the admin is currently active (not revoked or suspended).","nullable":false},{"name":"suspended_until","type":"datetime","description":"Admin-specific suspension window, if applicable.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the admin record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the admin record was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the admin record was soft-deleted (if applicable).","nullable":true}],"uniqueIndexes":[{"fieldNames":["user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["is_active"]},{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-03-content.prisma","namespace":"Content","models":[{"name":"discussion_board_threads","description":"Discussion threads serve as the top-level grouping mechanism for related posts and comments. Each thread represents a distinct discussion topic or theme, acting as the root node for all hierarchical content beneath it. Threads can be locked or archived for moderation purposes. Supports search by title, status, and created_by user. Soft deletion is supported for compliance.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"created_by_id","type":"uuid","description":"Creator's {@link discussion_board_users.id}. References the user who started the thread.","relation":{"name":"createdBy","targetModel":"discussion_board_users"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Title of the discussion thread, used for identification and search.","nullable":false},{"name":"is_locked","type":"boolean","description":"Whether the thread is currently locked for further posting or commenting.","nullable":false},{"name":"is_archived","type":"boolean","description":"Whether the thread has been archived. Archived threads are read-only.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the thread was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the thread was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"When present, indicates the thread was soft deleted (hidden from general view).","nullable":true}],"uniqueIndexes":[{"fieldNames":["title"],"unique":true}],"plainIndexes":[{"fieldNames":["created_by_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"discussion_board_posts","description":"Posts are the primary content units within discussion threads. Each post belongs to a thread, can reference an author (user), and is subject to edit history tracking. Each post may be flagged, commented on, or moderated. Soft deletion is standard for user and regulatory compliance.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"thread_id","type":"uuid","description":"Target thread's {@link discussion_board_threads.id}. Indicates thread this post belongs to.","relation":{"name":"thread","targetModel":"discussion_board_threads"},"unique":false,"nullable":false},{"name":"created_by_id","type":"uuid","description":"Author's {@link discussion_board_users.id}. Indicates the user who submitted this post.","relation":{"name":"createdBy","targetModel":"discussion_board_users"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Post title, used for identification within thread and for search.","nullable":false},{"name":"body","type":"string","description":"Rich text body of the post content.","nullable":false},{"name":"is_locked","type":"boolean","description":"Whether this post is locked for editing or commenting.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the post was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the post was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp; if set, post is not visible to regular users.","nullable":true}],"uniqueIndexes":[{"fieldNames":["thread_id","title"],"unique":true}],"plainIndexes":[{"fieldNames":["thread_id","created_at"]},{"fieldNames":["created_by_id"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]},{"name":"discussion_board_post_edit_histories","description":"Edit history (snapshot) table for posts. Stores previous versions of each post for audit, compliance, or moderation review. Each record is linked to the original post and contains the full previous snapshot of the post's contents. Append-only by design.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Target post's {@link discussion_board_posts.id} for which the snapshot is stored.","relation":{"name":"post","targetModel":"discussion_board_posts"},"unique":false,"nullable":false},{"name":"edited_by_id","type":"uuid","description":"Reference to the user who performed the edit. {@link discussion_board_users.id}","relation":{"name":"editedBy","targetModel":"discussion_board_users"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Snapshot of post title at the time of edit.","nullable":false},{"name":"body","type":"string","description":"Snapshot of the post body at the time of edit.","nullable":false},{"name":"edited_at","type":"datetime","description":"Timestamp when this edit was made.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["post_id"]},{"fieldNames":["edited_by_id"]},{"fieldNames":["edited_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]},{"name":"discussion_board_comments","description":"Comments are user responses to posts or, recursively, to other comments (nested up to 5 levels). Each comment belongs to a post and may optionally have a parent comment. Comments are independently manageable with full edit and moderation support. Soft deletion is required for auditability.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Parent post {@link discussion_board_posts.id} to which this comment belongs.","relation":{"name":"post","targetModel":"discussion_board_posts"},"unique":false,"nullable":false},{"name":"parent_id","type":"uuid","description":"Direct parent comment {@link discussion_board_comments.id} for nested commenting (nullable for top-level comments).","relation":{"name":"parent","targetModel":"discussion_board_comments","mappingName":"recursive"},"unique":false,"nullable":true},{"name":"created_by_id","type":"uuid","description":"Author's {@link discussion_board_users.id} for this comment.","relation":{"name":"createdBy","targetModel":"discussion_board_users"},"unique":false,"nullable":false}],"plainFields":[{"name":"body","type":"string","description":"Text content of the comment.","nullable":false},{"name":"nesting_level","type":"int","description":"Level of nesting for this comment (max 5; 0 = top-level).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when comment was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when comment was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp (hidden from public but retained for moderation/audit).","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["post_id","created_at"]},{"fieldNames":["parent_id"]},{"fieldNames":["created_by_id"]}],"ginIndexes":[{"fieldName":"body"}]},{"name":"discussion_board_comment_edit_histories","description":"Edit history (snapshot) table for comments. Records all previous versions of a comment for audit/audit-log compliance. Each record links to the original comment and editor. Append-only by design.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"comment_id","type":"uuid","description":"Target comment's {@link discussion_board_comments.id} to which the snapshot belongs.","relation":{"name":"comment","targetModel":"discussion_board_comments"},"unique":false,"nullable":false},{"name":"edited_by_id","type":"uuid","description":"User who performed the comment edit. {@link discussion_board_users.id}","relation":{"name":"editedBy","targetModel":"discussion_board_users"},"unique":false,"nullable":false}],"plainFields":[{"name":"body","type":"string","description":"Snapshot body at edit moment.","nullable":false},{"name":"edited_at","type":"datetime","description":"Edit timestamp for this snapshot record.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["comment_id"]},{"fieldNames":["edited_by_id"]},{"fieldNames":["edited_at"]}],"ginIndexes":[{"fieldName":"body"}]},{"name":"discussion_board_attachments","description":"Attachments hold metadata for files or media uploaded to posts/comments. Each attachment references either a post or a comment, but not both at once. Files may include images, documents, or media. Managed through parent content. Soft deletion is applied for compliance and moderation needs.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Associated post {@link discussion_board_posts.id}; nullable in case attachment is for a comment instead.","relation":{"name":"post","targetModel":"discussion_board_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Associated comment {@link discussion_board_comments.id}; nullable if attached to a post instead.","relation":{"name":"comment","targetModel":"discussion_board_comments"},"unique":false,"nullable":true},{"name":"uploaded_by_id","type":"uuid","description":"Uploader's {@link discussion_board_users.id}. User who added the file.","relation":{"name":"uploadedBy","targetModel":"discussion_board_users"},"unique":false,"nullable":false}],"plainFields":[{"name":"file_name","type":"string","description":"Original file name as uploaded by the user.","nullable":false},{"name":"file_url","type":"uri","description":"Permanent URL of the uploaded file or media for access.","nullable":false},{"name":"content_type","type":"string","description":"MIME type of the file for validation and access control.","nullable":false},{"name":"size_bytes","type":"int","description":"Size of the file in bytes.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the attachment was uploaded.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion marker for compliance/moderation; nullable.","nullable":true}],"uniqueIndexes":[{"fieldNames":["file_url"],"unique":true}],"plainIndexes":[{"fieldNames":["post_id"]},{"fieldNames":["comment_id"]},{"fieldNames":["uploaded_by_id"]}],"ginIndexes":[]}]},{"filename":"schema-04-voting.prisma","namespace":"Voting","models":[{"name":"discussion_board_votes","description":"Stores individual user votes (upvotes or downvotes) on posts and comments. Each vote is linked to an actor (user), a post or comment, and is independently managed for deduplication and analytics. Used for engagement, business logic, and permission enforcement. Related to {@link discussion_board_posts}, {@link discussion_board_comments}, {@link discussion_board_users}.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_user_id","type":"uuid","description":"Voter's {@link discussion_board_users.id}. Indicates the user who performed this vote.","relation":{"name":"user","targetModel":"discussion_board_users"},"unique":false,"nullable":false},{"name":"discussion_board_post_id","type":"uuid","description":"Voted post's {@link discussion_board_posts.id}. Nullable if vote is on a comment.","relation":{"name":"post","targetModel":"discussion_board_posts"},"unique":false,"nullable":true},{"name":"discussion_board_comment_id","type":"uuid","description":"Voted comment's {@link discussion_board_comments.id}. Nullable if vote is on a post.","relation":{"name":"comment","targetModel":"discussion_board_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"vote_type","type":"string","description":"Indicates whether the vote is +1 (upvote) or -1 (downvote). Only accept 'up' or 'down'.","nullable":false},{"name":"created_at","type":"datetime","description":"Vote creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Vote last update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Vote soft-delete timestamp; null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["discussion_board_user_id","discussion_board_post_id"],"unique":true},{"fieldNames":["discussion_board_user_id","discussion_board_comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["discussion_board_post_id"]},{"fieldNames":["discussion_board_comment_id"]}],"ginIndexes":[]},{"name":"discussion_board_vote_histories","description":"Captures a full, append-only audit trail of all vote state changes (creation, update, delete). Each record points to its corresponding vote and records the historical data for compliance and analytics. Used for audit, restoration, and compliance investigation workflows. Related to {@link discussion_board_votes}.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_vote_id","type":"uuid","description":"Tracked vote {@link discussion_board_votes.id}. Links the history record to the current or former vote.","relation":{"name":"vote","targetModel":"discussion_board_votes"},"unique":false,"nullable":false}],"plainFields":[{"name":"vote_type","type":"string","description":"Historical vote value in this change record ('up' or 'down').","nullable":false},{"name":"changed_at","type":"datetime","description":"Timestamp of state change (created/updated/deleted).","nullable":false},{"name":"operation","type":"string","description":"Indicates change type: 'create', 'update', or 'delete'.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["changed_at"]}],"ginIndexes":[]},{"name":"discussion_board_polls","description":"Poll metadata attached to posts or threads. Used to allow users to vote in single- or multiple-choice poll scenarios. Stores poll attributes and lifecycle. Related to {@link discussion_board_posts}, {@link discussion_board_poll_options}, {@link discussion_board_poll_votes}.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_post_id","type":"uuid","description":"The post to which this poll is attached {@link discussion_board_posts.id}. Each poll is linked to a post.","relation":{"name":"post","targetModel":"discussion_board_posts"},"unique":true,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Poll title or question visible to users.","nullable":false},{"name":"description","type":"string","description":"Optional poll description.","nullable":true},{"name":"multi_choice","type":"boolean","description":"True if poll allows multiple option selections per voter.","nullable":false},{"name":"opened_at","type":"datetime","description":"Poll open time (can start accepting votes).","nullable":false},{"name":"closed_at","type":"datetime","description":"Poll closing time (null if open-ended).","nullable":true},{"name":"created_at","type":"datetime","description":"Poll creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last modification time.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Poll soft-delete marker (null if active).","nullable":true}],"uniqueIndexes":[{"fieldNames":["discussion_board_post_id"],"unique":true}],"plainIndexes":[{"fieldNames":["opened_at"]},{"fieldNames":["closed_at"]}],"ginIndexes":[{"fieldName":"title"}]},{"name":"discussion_board_poll_options","description":"Options/choices available to voters within a given poll. These are subsidiary to polls and only manageable via the parent poll. Required for selection and validation. Related to {@link discussion_board_polls}.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_poll_id","type":"uuid","description":"Parent poll {@link discussion_board_polls.id}. The poll this option belongs to.","relation":{"name":"poll","targetModel":"discussion_board_polls"},"unique":false,"nullable":false}],"plainFields":[{"name":"option_text","type":"string","description":"Text shown to users as an option/answer.","nullable":false},{"name":"sequence","type":"int","description":"Display order for poll options (1-based).","nullable":false},{"name":"created_at","type":"datetime","description":"Poll option creation time.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last updated time for this option.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Poll option soft-delete marker.","nullable":true}],"uniqueIndexes":[{"fieldNames":["discussion_board_poll_id","sequence"],"unique":true}],"plainIndexes":[{"fieldNames":["discussion_board_poll_id"]}],"ginIndexes":[{"fieldName":"option_text"}]},{"name":"discussion_board_poll_votes","description":"Links user selections in polls to options, enabling many-to-many relationships. Each record indicates a single user's choice for a poll option. Ensures only valid and allowed selections are recorded. Used for poll result counting. Related to {@link discussion_board_poll_options}, {@link discussion_board_polls}, {@link discussion_board_users}.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_poll_id","type":"uuid","description":"Poll being answered {@link discussion_board_polls.id}.","relation":{"name":"poll","targetModel":"discussion_board_polls"},"unique":false,"nullable":false},{"name":"discussion_board_poll_option_id","type":"uuid","description":"Selected option {@link discussion_board_poll_options.id}.","relation":{"name":"option","targetModel":"discussion_board_poll_options"},"unique":false,"nullable":false},{"name":"discussion_board_user_id","type":"uuid","description":"User who voted {@link discussion_board_users.id}.","relation":{"name":"user","targetModel":"discussion_board_users"},"unique":false,"nullable":false}],"plainFields":[{"name":"created_at","type":"datetime","description":"Vote cast time.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Vote soft-delete marker.","nullable":true}],"uniqueIndexes":[{"fieldNames":["discussion_board_poll_id","discussion_board_poll_option_id","discussion_board_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-05-moderation.prisma","namespace":"Moderation","models":[{"name":"discussion_board_flag_reports","description":"Contains all user and system-generated content flag reports, representing instance of objection or report on posts or comments for moderator queue. Supports independent flag actions and cross-content search for moderation workflows. Related entities: moderation actions and appeals. Stance: \"primary\" because each report may be managed, investigated, or triaged independently, regardless of content parent.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reporter_id","type":"uuid","description":"Reporting user's {@link discussion_board_users.id}. References the user who flagged content.","relation":{"name":"reporter","targetModel":"discussion_board_users"},"unique":false,"nullable":false},{"name":"post_id","type":"uuid","description":"Flagged post's {@link discussion_board_posts.id}. Nullable if the report is on a comment.","relation":{"name":"post","targetModel":"discussion_board_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Flagged comment's {@link discussion_board_comments.id}. Nullable if the report refers to a post.","relation":{"name":"comment","targetModel":"discussion_board_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"reason","type":"string","description":"User-provided or system reason (category) for flagging the content, e.g. 'abuse', 'spam', 'misinformation'.","nullable":false},{"name":"details","type":"string","description":"Optional extended textual justification for the report.","nullable":true},{"name":"status","type":"string","description":"Current review status for the report ('pending', 'triaged', 'dismissed', 'accepted', 'escalated').","nullable":false},{"name":"reviewed_at","type":"datetime","description":"The timestamp when the report was reviewed by a moderator; null if not yet reviewed.","nullable":true},{"name":"created_at","type":"datetime","description":"Time when the flag report was submitted.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last time the report record was updated (e.g. status changes, triage).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft-delete timestamp. Null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["reporter_id","post_id","comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["created_at"]},{"fieldNames":["post_id"]},{"fieldNames":["comment_id"]}],"ginIndexes":[{"fieldName":"details"}]},{"name":"discussion_board_moderation_actions","description":"Represents all actionable decisions performed by human moderators or automated systems, including those on posts, comments, users, or IPs. Stores the action type, moderator reference, context, reason, and effect. Enables independent audit across parent contexts and supports historical review.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"moderator_id","type":"uuid","description":"Responsible moderator's {@link discussion_board_moderators.id}.","relation":{"name":"moderator","targetModel":"discussion_board_moderators"},"unique":false,"nullable":false},{"name":"user_id","type":"uuid","description":"Affected user's {@link discussion_board_users.id}. Null unless moderation action targets a user directly (e.g., warning, suspension).","relation":{"name":"user","targetModel":"discussion_board_users"},"unique":false,"nullable":true},{"name":"post_id","type":"uuid","description":"Moderated post's {@link discussion_board_posts.id}. Null unless this action is for a post.","relation":{"name":"post","targetModel":"discussion_board_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Moderated comment's {@link discussion_board_comments.id}. Null unless this action is for a comment.","relation":{"name":"comment","targetModel":"discussion_board_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"action_type","type":"string","description":"Enumeration: kind of moderation ('warn', 'mute', 'remove', 'edit', 'restrict', 'restore', 'escalate').","nullable":false},{"name":"action_reason","type":"string","description":"Human- or system-written reason for moderator action, for compliance traceability.","nullable":false},{"name":"details","type":"string","description":"Long-form description or notes about the moderation action.","nullable":true},{"name":"effective_from","type":"datetime","description":"When the moderation action took effect.","nullable":false},{"name":"effective_until","type":"datetime","description":"When the moderation action concludes (for temporary restrictions/warnings), null if not time-bound.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the moderation action was taken.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last update to the moderation action record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft-delete timestamp; null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["moderator_id","user_id","post_id","comment_id","action_type","created_at"],"unique":true}],"plainIndexes":[{"fieldNames":["action_type"]},{"fieldNames":["created_at"]},{"fieldNames":["user_id"]},{"fieldNames":["post_id"]},{"fieldNames":["comment_id"]}],"ginIndexes":[{"fieldName":"details"}]},{"name":"discussion_board_moderation_audit_logs","description":"Historical record (append-only snapshot) of all moderation, triage, and review actions for compliance, reporting, and forensic analysis. Each record is timestamped and stores the full state for audit trail integrity. Rarely directly manipulated—serves audit and investigation.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"moderation_action_id","type":"uuid","description":"Related moderation action's {@link discussion_board_moderation_actions.id}.","relation":{"name":"moderationAction","targetModel":"discussion_board_moderation_actions"},"unique":false,"nullable":false}],"plainFields":[{"name":"actor_id","type":"uuid","description":"Person (or system) responsible for the action, references moderator, admin, or automated user. Redundant for historical snapshot integrity.","nullable":false},{"name":"audit_type","type":"string","description":"Kind of audit event ('action_taken', 'escalated', 'reverted', 'appeal_handled', 'policy_update').","nullable":false},{"name":"state_json","type":"string","description":"Full JSON snapshot of the moderation or flag report state after this event.","nullable":false},{"name":"description","type":"string","description":"Narrative (English) describing the event for future compliance/audit review.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the audit log was created (event occurred).","nullable":false}],"uniqueIndexes":[{"fieldNames":["moderation_action_id","created_at"],"unique":true}],"plainIndexes":[{"fieldNames":["audit_type"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"description"}]},{"name":"discussion_board_appeals","description":"Represents end-user or affected entity appeals against moderation/flag/report actions. Enables users to formally request review, reversal, or clarification of specific moderation events. Managed as independent first-class entities and supports multiple appeals per incident or actor. Stance: 'primary' due to independent API endpoints and review processes.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"appellant_id","type":"uuid","description":"Appealing user's {@link discussion_board_users.id}. May reference a moderator or admin in rare cases.","relation":{"name":"appellant","targetModel":"discussion_board_users"},"unique":false,"nullable":false},{"name":"moderation_action_id","type":"uuid","description":"Related moderation action's {@link discussion_board_moderation_actions.id}. Null if appeal relates to a flag report rather than a prior action.","relation":{"name":"moderationAction","targetModel":"discussion_board_moderation_actions"},"unique":false,"nullable":true},{"name":"flag_report_id","type":"uuid","description":"Related flag report's {@link discussion_board_flag_reports.id}. Null unless appeal targets a moderation action on a flag, not a content moderation event.","relation":{"name":"flagReport","targetModel":"discussion_board_flag_reports"},"unique":false,"nullable":true}],"plainFields":[{"name":"appeal_reason","type":"string","description":"User-provided narrative and justification for the appeal.","nullable":false},{"name":"status","type":"string","description":"Appeal lifecycle status: ('pending', 'reviewed', 'resolved', 'denied', 'escalated').","nullable":false},{"name":"resolution_comment","type":"string","description":"Moderator/admin comment or justification for granting/denying the appeal, if applicable.","nullable":true},{"name":"resolved_at","type":"datetime","description":"Timestamp of final resolution. Null if still active or under review.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the appeal was initially filed.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last updated timestamp for the appeal.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft-delete timestamp. Null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["appellant_id","moderation_action_id","flag_report_id"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"appeal_reason"},{"fieldName":"resolution_comment"}]},{"name":"discussion_board_escalation_logs","description":"Workflow subsidiary: records detailed logs of escalation events, including chain-of-command handover, reason, target, and final outcomes. Always tied to foundational moderation or appeal entities—never as independent records. Supports internal reporting, audit, and escalated workflow trace. Managed through parent entities only.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"appeal_id","type":"uuid","description":"Reference to the related {@link discussion_board_appeals.id}.","relation":{"name":"appeal","targetModel":"discussion_board_appeals"},"unique":false,"nullable":false},{"name":"moderation_action_id","type":"uuid","description":"Reference to related {@link discussion_board_moderation_actions.id} — escalation of a specific moderation action.","relation":{"name":"moderationAction","targetModel":"discussion_board_moderation_actions"},"unique":false,"nullable":true}],"plainFields":[{"name":"escalation_level","type":"string","description":"Level/stage (e.g., 'soft_review', 'team_review', 'legal_review', 'admin_review').","nullable":false},{"name":"event","type":"string","description":"Short name ('escalated', 'delegated', 'finalized', 'withdrawn').","nullable":false},{"name":"description","type":"string","description":"Human-readable details for internal reporting.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp of escalation log record.","nullable":false}],"uniqueIndexes":[{"fieldNames":["appeal_id","moderation_action_id","escalation_level","created_at"],"unique":true}],"plainIndexes":[{"fieldNames":["event"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"description"}]}]},{"filename":"schema-06-notifications.prisma","namespace":"Notifications","models":[{"name":"discussion_board_notifications","description":"Notification delivery instances: Each record represents a discrete notification, either user-facing or system-triggered, intended for a specific recipient. Supports associations with sending actor, linked post/comment (if reference exists), notification type, status (unread/read/delivered), and failure/audit fields. User can independently mark as read/archived. Related to {@link discussion_board_users}, potentially to posts/comments via foreign keys. Business logic distinguishes among notification types (reply, mention, moderator action, system alert, etc.).","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"recipient_user_id","type":"uuid","description":"Target recipient's {@link discussion_board_users.id}. User who receives the notification.","relation":{"name":"recipientUser","targetModel":"discussion_board_users","mappingName":"discussion_board_notifications_of_recipient_user_id"},"unique":false,"nullable":false},{"name":"actor_user_id","type":"uuid","description":"Optional actor that generated the notification. References {@link discussion_board_users.id}; null for system events.","relation":{"name":"actorUser","targetModel":"discussion_board_users","mappingName":"discussion_board_notifications_of_actor_user_id"},"unique":false,"nullable":true},{"name":"post_id","type":"uuid","description":"Linked post, if notification relates to a discussion post. References {@link discussion_board_posts.id}. Nullable.","relation":{"name":"post","targetModel":"discussion_board_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Linked comment, if notification relates to a post comment. References {@link discussion_board_comments.id}. Nullable.","relation":{"name":"comment","targetModel":"discussion_board_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"type","type":"string","description":"Type of notification (e.g., reply, mention, flag, mod_action, system_alert, poll_close, etc.) - used to drive business and UI logic.","nullable":false},{"name":"status","type":"string","description":"Delivery/read status: one of 'unread', 'read', 'delivered', 'archived', 'failed'. Used to filter in notification center and trigger UX badges.","nullable":false},{"name":"title","type":"string","description":"Short notification title or summary (for display in notification center previews).","nullable":true},{"name":"body","type":"string","description":"Notification content/body, typically short and context-focused. HTML/text allowed per business policy.","nullable":true},{"name":"action_url","type":"uri","description":"Link or URI for user action (e.g., \"go to post\", \"view comment\"). Null if system/informational only.","nullable":true},{"name":"failure_reason","type":"string","description":"Reason for delivery failure (if status is 'failed'). May contain business-level reason or error code. Null if delivered/successful.","nullable":true},{"name":"created_at","type":"datetime","description":"Notification creation timestamp (when notification was generated).","nullable":false},{"name":"delivered_at","type":"datetime","description":"When notification was (attempted to be) delivered (e.g., pushed, sent, shown). Nullable if not delivered yet.","nullable":true},{"name":"read_at","type":"datetime","description":"When recipient read the notification (set by user interaction, system, or push). Null if not yet read.","nullable":true},{"name":"deleted_at","type":"datetime","description":"Soft-deletion timestamp. Null if not (soft-)deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["recipient_user_id","type","action_url","created_at"],"unique":true}],"plainIndexes":[{"fieldNames":["recipient_user_id","status","created_at"]},{"fieldNames":["actor_user_id"]},{"fieldNames":["post_id"]},{"fieldNames":["comment_id"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]},{"name":"discussion_board_notification_preferences","description":"Per-user notification preference settings: Each record applies to a specific user and defines delivery channel choices (in-app, email, push), frequency, and opt-in/out preferences for each notification type/category. Managed independently by the user. Critical for respecting user contact permissions and compliance requirements.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Notification preference owner's {@link discussion_board_users.id}. References the user this preference set belongs to.","relation":{"name":"user","targetModel":"discussion_board_users"},"unique":true,"nullable":false}],"plainFields":[{"name":"email_enabled","type":"boolean","description":"Whether the user enables email notifications for this category (true: allowed, false: suppressed).","nullable":false},{"name":"push_enabled","type":"boolean","description":"Whether the user enables push notifications for this category.","nullable":false},{"name":"in_app_enabled","type":"boolean","description":"Whether the user enables in-app notifications for this category (notification center, banners, etc.).","nullable":false},{"name":"frequency","type":"string","description":"Notification delivery frequency: e.g., 'immediate', 'digest_daily', 'digest_weekly'. Directs scheduling for batch or real-time delivery.","nullable":false},{"name":"categories","type":"string","description":"CSV or JSON-encoded list of notification categories/types this preference applies to. (e.g., 'reply,mention,mod_action').","nullable":false},{"name":"mute_until","type":"datetime","description":"Suppress notifications for all categories until this datetime. Null if not muted.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp for this preference record.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last updated timestamp for this preferences record.","nullable":false}],"uniqueIndexes":[{"fieldNames":["user_id"],"unique":true}],"plainIndexes":[],"ginIndexes":[{"fieldName":"categories"}]},{"name":"discussion_board_notification_subscriptions","description":"Represents persistent notification subscriptions: Each record describes a user following a topic, category, or post/thread (subscription_target_type/target_id). Enables delivery of notifications whenever the subscribed entity (category, thread, post, etc.) is updated or triggers an event. Users can manage these subscriptions independently, and unsubscribe at any time.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Subscribing user's {@link discussion_board_users.id}. The user who follows or subscribes to event delivery.","relation":{"name":"user","targetModel":"discussion_board_users"},"unique":false,"nullable":false}],"plainFields":[{"name":"subscription_target_type","type":"string","description":"Type of entity being followed (e.g., 'post', 'thread', 'category', 'tag', 'user') for polymorphic delivery.","nullable":false},{"name":"subscription_target_id","type":"uuid","description":"Entity ID being followed/subscribed (FK to target entity, not enforced here due to polymorphism).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when subscription was created.","nullable":false},{"name":"deleted_at","type":"datetime","description":"If present, marks a soft delete (unsubscribed). Still retained for compliance/audit.","nullable":true}],"uniqueIndexes":[{"fieldNames":["user_id","subscription_target_type","subscription_target_id"],"unique":true}],"plainIndexes":[{"fieldNames":["subscription_target_type","subscription_target_id"]}],"ginIndexes":[]}]},{"filename":"schema-07-session.prisma","namespace":"Session","models":[{"name":"discussion_board_jwt_tokens","description":"Stores all active JWT access tokens for authenticated sessions. Each token links to a user and device/session metadata, and includes issued, expiration, and revocation timestamps for full audit traceability. Enables support for single-session, multi-device, and session revocation. References {@link discussion_board_users.id}. No authentication logic present here.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_user_id","type":"uuid","description":"Authenticated user's {@link discussion_board_users.id} to whom the token was issued.","relation":{"name":"user","targetModel":"discussion_board_users"},"unique":false,"nullable":false}],"plainFields":[{"name":"token","type":"string","description":"JWT access token string (opaque, signed/encoded).","nullable":false},{"name":"issued_at","type":"datetime","description":"Datetime when token was generated, for audit trace and session tracking.","nullable":false},{"name":"expires_at","type":"datetime","description":"Datetime when this token should expire and become invalid.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Datetime when this session/token was revoked (null if still valid).","nullable":true},{"name":"device_info","type":"string","description":"Optional device/session metadata (browser, OS, IP, or user agent as string).","nullable":true},{"name":"created_at","type":"datetime","description":"Datetime when this record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Datetime when this record was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft-delete timestamp for audit compliance. Null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["token"],"unique":true}],"plainIndexes":[{"fieldNames":["discussion_board_user_id"]},{"fieldNames":["issued_at"]},{"fieldNames":["expires_at"]}],"ginIndexes":[]},{"name":"discussion_board_refresh_tokens","description":"Tracks refresh tokens used for obtaining new access tokens in session management. Each token is linked to a user and supports revocation or expiry for device-specific logout flows. Only one active refresh token per device/session per user per audit and compliance rule. References {@link discussion_board_users.id}.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_user_id","type":"uuid","description":"Token owner's {@link discussion_board_users.id}.","relation":{"name":"user","targetModel":"discussion_board_users"},"unique":false,"nullable":false}],"plainFields":[{"name":"refresh_token","type":"string","description":"Opaque token string for session refresh (secure random, not JWT).","nullable":false},{"name":"issued_at","type":"datetime","description":"Datetime when refresh token was created for auditing lifecycle.","nullable":false},{"name":"expires_at","type":"datetime","description":"Datetime this refresh token expires.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Datetime when refresh token was revoked (manual or on logout). Null if active.","nullable":true},{"name":"device_info","type":"string","description":"Optional device/session metadata for context or audit (device/browser/IP info).","nullable":true},{"name":"created_at","type":"datetime","description":"Datetime when this record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Datetime when this record was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft-delete timestamp. Null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["refresh_token"],"unique":true}],"plainIndexes":[{"fieldNames":["discussion_board_user_id"]},{"fieldNames":["issued_at"]},{"fieldNames":["expires_at"]}],"ginIndexes":[]},{"name":"discussion_board_password_resets","description":"Supports password reset flows by tracking all issued reset tokens, their status, and their relationship to a user. Allows only single-use, time-limited tokens, enforced via expiry and one-time use flags. Each row is fully auditable for compliance. Links to {@link discussion_board_users.id}.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_user_id","type":"uuid","description":"Owner user requesting password reset; references {@link discussion_board_users.id}.","relation":{"name":"user","targetModel":"discussion_board_users"},"unique":false,"nullable":false}],"plainFields":[{"name":"reset_token","type":"string","description":"Single-use password reset token string (secure, unique, non-repeating).","nullable":false},{"name":"expires_at","type":"datetime","description":"Datetime when reset link or token expires and may not be reused.","nullable":false},{"name":"used_at","type":"datetime","description":"Datetime when this token was actually used (null if not yet used).","nullable":true},{"name":"created_at","type":"datetime","description":"Datetime when this record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Datetime when this record was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft-delete timestamp for audit compliance. Null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["reset_token"],"unique":true}],"plainIndexes":[{"fieldNames":["discussion_board_user_id"]},{"fieldNames":["expires_at"]}],"ginIndexes":[]},{"name":"discussion_board_verification_tokens","description":"Stores and tracks verification codes/tokens for email or other out-of-band verification events during registration and sensitive operations. Each token may be single-use or multi-purpose (e.g., sign-up email, MFA, email update), linked to a user for audit and reissuance tracking. Each has timing and usage audit state. Tied to {@link discussion_board_users.id}.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_user_id","type":"uuid","description":"Reference to the user for whom this verification event is tracked. {@link discussion_board_users.id}.","relation":{"name":"user","targetModel":"discussion_board_users"},"unique":false,"nullable":false}],"plainFields":[{"name":"verification_token","type":"string","description":"Token string/code sent for registration/email verification/MFA.","nullable":false},{"name":"purpose","type":"string","description":"Purpose of this token (e.g. 'email_verification', 'password_reset', 'mfa').","nullable":false},{"name":"expires_at","type":"datetime","description":"Datetime when verification event expires.","nullable":false},{"name":"used_at","type":"datetime","description":"Datetime when code was used for verification, else null if unused.","nullable":true},{"name":"created_at","type":"datetime","description":"Datetime when this record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Datetime when this record was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft-delete timestamp for audit. Null if not deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["verification_token"],"unique":true}],"plainIndexes":[{"fieldNames":["discussion_board_user_id"]},{"fieldNames":["expires_at"]},{"fieldNames":["purpose"]}],"ginIndexes":[]}]},{"filename":"schema-08-compliance.prisma","namespace":"Compliance","models":[{"name":"discussion_board_data_erasure_requests","description":"Records each user-initiated request for data erasure (GDPR/CCPA Right to be Forgotten). Tracks requestor, status, type, justification, verification, and regulator responses. Allows for compliance with required audit trail and deletion verification. Relates to {@link discussion_board_users}.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_user_id","type":"uuid","description":"Belonged user's {@link discussion_board_users.id}. Foreign key for tracking which user's data is to be erased. Mandatory for audit and traceability.","relation":{"name":"user","targetModel":"discussion_board_users"},"unique":false,"nullable":false}],"plainFields":[{"name":"request_type","type":"string","description":"Type of erasure (full account, post-only, comment-only, partial, or specific legal request). Used for regulatory reporting.","nullable":false},{"name":"status","type":"string","description":"Current erasure process state (pending, processing, completed, rejected). Must be explicitly set for record integrity.","nullable":false},{"name":"submitted_at","type":"datetime","description":"Timestamp when the erasure request was submitted.","nullable":false},{"name":"processed_at","type":"datetime","description":"When the erasure request was fully processed, if applicable.","nullable":true},{"name":"justification","type":"string","description":"User-provided or legally required reason for data erasure. Supports compliance with regulatory requirements.","nullable":true},{"name":"regulator_reference","type":"string","description":"External regulatory agency reference or ticket if applicable (e.g. DPA reference number).","nullable":true},{"name":"verifier","type":"string","description":"Compliance staff or automated process validating the request. For audit tracking.","nullable":true},{"name":"verified_at","type":"datetime","description":"When request was verified for eligibility. May be null if auto-approved.","nullable":true},{"name":"response_payload","type":"string","description":"Structured response content to the requester, used for compliance communication and documentation.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the record was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"When the record was soft-deleted (may be null for active records). Soft delete required for audit compliance.","nullable":true}],"uniqueIndexes":[{"fieldNames":["discussion_board_user_id","request_type","submitted_at"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["submitted_at"]}],"ginIndexes":[{"fieldName":"justification"}]},{"name":"discussion_board_privacy_dashboards","description":"Aggregated privacy metrics, summaries, and user-facing data exports for compliance dashboards (GDPR/CCPA Art. 15/20, right to access/portability). Used to generate machine-readable exports, audit logs, and summary tables for regulatory response. Not for regular use, only on user request or regulatory demand.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_user_id","type":"uuid","description":"The user whose data this privacy dashboard summarizes. Belongs to {@link discussion_board_users.id}.","relation":{"name":"user","targetModel":"discussion_board_users"},"unique":false,"nullable":false}],"plainFields":[{"name":"access_requested_at","type":"datetime","description":"When the user requested privacy data access/export.","nullable":false},{"name":"access_fulfilled_at","type":"datetime","description":"When data export was completed and made available. For regulatory deadlines.","nullable":true},{"name":"dashboard_payload","type":"string","description":"JSON-encoded or structured summary of user's privacy data, data sources, erasure history, etc. Used for export and compliance evidence.","nullable":false},{"name":"export_file_uri","type":"uri","description":"URI link to generated download or export file for portability. May be null prior to file generation.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the dashboard record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when dashboard was last updated or re-generated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"When the record was soft-deleted (may be null).","nullable":true}],"uniqueIndexes":[{"fieldNames":["discussion_board_user_id","access_requested_at"],"unique":true}],"plainIndexes":[{"fieldNames":["access_requested_at"]},{"fieldNames":["discussion_board_user_id"]}],"ginIndexes":[]},{"name":"discussion_board_compliance_events","description":"Captures all compliance-triggered actions, incidents, investigation cases, regulatory requests (not business-as-usual logs). Used for recordkeeping, reporting to DPAs (Data Protection Authorities), and internal compliance audits. Not a general audit or syslog table.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"initiated_by_user_id","type":"uuid","description":"Optional: User who triggered the compliance event, if applicable (e.g., making a legal or privacy request). Nullable, since not all events come from users.","relation":{"name":"initiator","targetModel":"discussion_board_users"},"unique":false,"nullable":true}],"plainFields":[{"name":"event_type","type":"string","description":"Nature of the compliance event (e.g., regulator_inquiry, data_breach_report, DPIA_completed, erasure_executed, legal_hold).","nullable":false},{"name":"event_status","type":"string","description":"Current status (open, closed, in_review, escalated, resolved), allowing distinct compliance tracking.","nullable":false},{"name":"event_details","type":"string","description":"Detailed event content, investigation summary, or protocol steps. Often used for audit export; supports full text search.","nullable":true},{"name":"detected_at","type":"datetime","description":"When the compliance event started or was detected/received.","nullable":false},{"name":"resolved_at","type":"datetime","description":"When event was closed or resolved, if finalized.","nullable":true},{"name":"regulatory_ticket","type":"string","description":"Regulator's case/ticket number or external ID, if available, for traceability.","nullable":true},{"name":"assigned_staff","type":"string","description":"Compliance staff member or system process handling the event. May be null if auto-processed or pending assignment.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when this event record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Record last updated timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft-deleted timestamp (null when active).","nullable":true}],"uniqueIndexes":[{"fieldNames":["event_type","detected_at"],"unique":true}],"plainIndexes":[{"fieldNames":["event_status"]},{"fieldNames":["detected_at"]}],"ginIndexes":[{"fieldName":"event_details"}]},{"name":"discussion_board_export_logs","description":"Tracks all exports and downloads of compliance, audit, or user privacy data (for regulatory evidence). Includes target type (user, regulator, legal), file info, requester, and status for traceability. Provides evidence for meeting data export/portability requirements. Distinct from privacy dashboards as this logs every generated file event.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"requested_by_user_id","type":"uuid","description":"The user (or staff) requesting the export file. FK to {@link discussion_board_users.id}. Nullable to support external/automated exports.","relation":{"name":"requester","targetModel":"discussion_board_users"},"unique":false,"nullable":true}],"plainFields":[{"name":"target_type","type":"string","description":"Export target: user, regulator, admin, legal, etc. Used to segment export type for audit.","nullable":false},{"name":"file_uri","type":"uri","description":"Download URI for the exported data/logs file.","nullable":false},{"name":"file_type","type":"string","description":"MIME type or descriptor of file (e.g. application/json, application/pdf, csv, xml, etc.).","nullable":false},{"name":"exported_at","type":"datetime","description":"When export was generated.","nullable":false},{"name":"status","type":"string","description":"Export status (pending, available, expired, failed).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the export log was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this record was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft-deleted timestamp (null for active/log-retained).","nullable":true}],"uniqueIndexes":[{"fieldNames":["file_uri"],"unique":true}],"plainIndexes":[{"fieldNames":["target_type"]},{"fieldNames":["requested_by_user_id"]}],"ginIndexes":[]}]}]}