/// Stores individual user votes (upvotes or downvotes) on posts and
/// comments. Each vote is linked to an actor (user), a post or comment, and
/// is independently managed for deduplication and analytics. Used for
/// engagement, business logic, and permission enforcement. Related to {@link
/// discussion_board_posts}, {@link discussion_board_comments}, {@link
/// discussion_board_users}.
///
/// @namespace Voting
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discussion_board_votes {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Voter's {@link discussion_board_users.id}. Indicates the user who
  /// performed this vote.
  discussion_board_user_id String @db.Uuid
  
  /// Voted post's {@link discussion_board_posts.id}. Nullable if vote is on a
  /// comment.
  discussion_board_post_id String? @db.Uuid
  
  /// Voted comment's {@link discussion_board_comments.id}. Nullable if vote is
  /// on a post.
  discussion_board_comment_id String? @db.Uuid
  
  /// Indicates whether the vote is +1 (upvote) or -1 (downvote). Only accept
  /// 'up' or 'down'.
  vote_type String
  
  /// Vote creation timestamp.
  created_at DateTime @db.Timestamptz
  
  /// Vote last update timestamp.
  updated_at DateTime @db.Timestamptz
  
  /// Vote soft-delete timestamp; null if active.
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  user discussion_board_users @relation(fields: [discussion_board_user_id], references: [id], onDelete: Cascade)
  post discussion_board_posts? @relation(fields: [discussion_board_post_id], references: [id], onDelete: Cascade)
  comment discussion_board_comments? @relation(fields: [discussion_board_comment_id], references: [id], onDelete: Cascade)
  
  discussion_board_vote_histories discussion_board_vote_histories[]
  
  @@unique([discussion_board_user_id, discussion_board_post_id], map: "discussion_board_votes_discussion_board_user_id_discus_640e3c94")
  @@unique([discussion_board_user_id, discussion_board_comment_id], map: "discussion_board_votes_discussion_board_user_id_discus_e701ad9f")
  @@index([created_at])
  @@index([discussion_board_post_id])
  @@index([discussion_board_comment_id])
}

/// Captures a full, append-only audit trail of all vote state changes
/// (creation, update, delete). Each record points to its corresponding vote
/// and records the historical data for compliance and analytics. Used for
/// audit, restoration, and compliance investigation workflows. Related to
/// {@link discussion_board_votes}.
///
/// @namespace Voting
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discussion_board_vote_histories {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Tracked vote {@link discussion_board_votes.id}. Links the history record
  /// to the current or former vote.
  discussion_board_vote_id String @db.Uuid
  
  /// Historical vote value in this change record ('up' or 'down').
  vote_type String
  
  /// Timestamp of state change (created/updated/deleted).
  changed_at DateTime @db.Timestamptz
  
  /// Indicates change type: 'create', 'update', or 'delete'.
  operation String
  
  //----
  // RELATIONS
  //----
  vote discussion_board_votes @relation(fields: [discussion_board_vote_id], references: [id], onDelete: Cascade)
  
  @@index([discussion_board_vote_id])
  
  @@index([changed_at])
}

/// Poll metadata attached to posts or threads. Used to allow users to vote
/// in single- or multiple-choice poll scenarios. Stores poll attributes and
/// lifecycle. Related to {@link discussion_board_posts}, {@link
/// discussion_board_poll_options}, {@link discussion_board_poll_votes}.
///
/// @namespace Voting
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discussion_board_polls {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// The post to which this poll is attached {@link
  /// discussion_board_posts.id}. Each poll is linked to a post.
  discussion_board_post_id String @db.Uuid
  
  /// Poll title or question visible to users.
  title String
  
  /// Optional poll description.
  description String?
  
  /// True if poll allows multiple option selections per voter.
  multi_choice Boolean
  
  /// Poll open time (can start accepting votes).
  opened_at DateTime @db.Timestamptz
  
  /// Poll closing time (null if open-ended).
  closed_at DateTime? @db.Timestamptz
  
  /// Poll creation timestamp.
  created_at DateTime @db.Timestamptz
  
  /// Last modification time.
  updated_at DateTime @db.Timestamptz
  
  /// Poll soft-delete marker (null if active).
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  post discussion_board_posts @relation(fields: [discussion_board_post_id], references: [id], onDelete: Cascade)
  
  discussion_board_poll_options discussion_board_poll_options[]
  discussion_board_poll_votes discussion_board_poll_votes[]
  
  @@unique([discussion_board_post_id])
  @@index([opened_at])
  @@index([closed_at])
  @@index([title(ops: raw("gin_trgm_ops"))], type: Gin)
}

/// Options/choices available to voters within a given poll. These are
/// subsidiary to polls and only manageable via the parent poll. Required for
/// selection and validation. Related to {@link discussion_board_polls}.
///
/// @namespace Voting
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discussion_board_poll_options {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Parent poll {@link discussion_board_polls.id}. The poll this option
  /// belongs to.
  discussion_board_poll_id String @db.Uuid
  
  /// Text shown to users as an option/answer.
  option_text String
  
  /// Display order for poll options (1-based).
  sequence Int @db.Integer
  
  /// Poll option creation time.
  created_at DateTime @db.Timestamptz
  
  /// Last updated time for this option.
  updated_at DateTime @db.Timestamptz
  
  /// Poll option soft-delete marker.
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  poll discussion_board_polls @relation(fields: [discussion_board_poll_id], references: [id], onDelete: Cascade)
  
  discussion_board_poll_votes discussion_board_poll_votes[]
  
  @@unique([discussion_board_poll_id, sequence], map: "discussion_board_poll_options_discussion_board_poll_id_f27289d5")
  @@index([discussion_board_poll_id])
  @@index([option_text(ops: raw("gin_trgm_ops"))], type: Gin)
}

/// Links user selections in polls to options, enabling many-to-many
/// relationships. Each record indicates a single user's choice for a poll
/// option. Ensures only valid and allowed selections are recorded. Used for
/// poll result counting. Related to {@link discussion_board_poll_options},
/// {@link discussion_board_polls}, {@link discussion_board_users}.
///
/// @namespace Voting
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discussion_board_poll_votes {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Poll being answered {@link discussion_board_polls.id}.
  discussion_board_poll_id String @db.Uuid
  
  /// Selected option {@link discussion_board_poll_options.id}.
  discussion_board_poll_option_id String @db.Uuid
  
  /// User who voted {@link discussion_board_users.id}.
  discussion_board_user_id String @db.Uuid
  
  /// Vote cast time.
  created_at DateTime @db.Timestamptz
  
  /// Vote soft-delete marker.
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  poll discussion_board_polls @relation(fields: [discussion_board_poll_id], references: [id], onDelete: Cascade)
  option discussion_board_poll_options @relation(fields: [discussion_board_poll_option_id], references: [id], onDelete: Cascade, map: "discussion_board_poll_votes_discussion_board_poll_opti_b69d4397")
  user discussion_board_users @relation(fields: [discussion_board_user_id], references: [id], onDelete: Cascade)
  
  @@index([discussion_board_poll_option_id], map: "discussion_board_poll_votes_discussion_board_poll_opti_19837b8b")
  @@index([discussion_board_user_id])
  
  @@unique([discussion_board_poll_id, discussion_board_poll_option_id, discussion_board_user_id], map: "discussion_board_poll_votes_discussion_board_poll_id_d_00a3173e")
  @@index([created_at])
}