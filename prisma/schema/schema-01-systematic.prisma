/// Global system configuration for the discussBoard platform. Holds
/// platform-wide settings such as max post/comment length, maintenance mode
/// flag, notification policies, data retention periods, or any feature flag
/// toggles. Managed exclusively by administrators, sets the foundation for
/// all application logic and enforcement. Only one row should exist at any
/// time.
///
/// @namespace Systematic
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discuss_board_settings {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// JSON string of system-wide configurable options such as ratios, toggle
  /// flags, policy versions, and detailed policy parameters.
  config_json String
  
  /// Timestamp of when this settings record was created.
  created_at DateTime
  
  /// Timestamp of last update to settings record.
  updated_at DateTime
}

/// Catalog of keywords, phrases, or regexes forbidden from user content due
/// to policy violations (e.g., hate speech, profanity, spam). Used for
/// filtering post and comment content at creation or update. Managed by
/// administrators and updated as guideline policies evolve. Each word or
/// expression is unique and case-insensitive.
///
/// @namespace Systematic
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discuss_board_forbidden_words {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Forbidden word, phrase, or regex pattern (case-insensitive).
  expression String
  
  /// Administrative description, business rationale, or policy context for
  /// this forbidden word or pattern.
  description String?
  
  /// Time this forbidden word or pattern was registered.
  created_at DateTime
  
  /// Last update time for this record.
  updated_at DateTime
  
  /// Soft delete flag: time this entry was removed by administrators, if
  /// applicable.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  @@unique([expression])
}

/// Audit records for all privacy-sensitive actions taken on user data.
/// Entries document accesses, exports, deletions, and policy updates
/// impacting user information, with who did it, which data subject,
/// operation type, outcome, and timestamp. Provides a robust audit trail for
/// privacy compliance and incident response. References user/account ids in
/// other tables for traceability, but never stores confidential data
/// directly.
///
/// @namespace Systematic
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discuss_board_privacy_logs {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Reference to the user account that performed the privacy-related action.
  /// {@link discuss_board_user_accounts.id}.
  actor_user_account_id String?
  
  /// Reference to the data subject impacted by the action (could be same as
  /// actor, or another user). {@link discuss_board_user_accounts.id}.
  data_subject_user_account_id String?
  
  /// Type of privacy operation (access, export, delete, policy update, consent
  /// change, etc.).
  action_type String
  
  /// Business context or justification for the privacy operation, including
  /// outcome or relevant audit notes.
  description String?
  
  /// Result of the privacy action (success, failure, partial). For audit
  /// reporting.
  result_status String
  
  /// Timestamp when this action was performed (UTC).
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  actorUserAccount discuss_board_user_accounts? @relation("discuss_board_privacy_logs_of_actor_user_account_id", fields: [actor_user_account_id], references: [id], onDelete: Cascade)
  dataSubjectUserAccount discuss_board_user_accounts? @relation("discuss_board_privacy_logs_of_data_subject_user_account_id", fields: [data_subject_user_account_id], references: [id], onDelete: Cascade)
  
  @@index([created_at])
  @@index([actor_user_account_id, created_at])
  @@index([data_subject_user_account_id, created_at], map: "discuss_board_privacy_logs_data_subject_user_account_i_dd2715cd")
}

/// Stores individual user consent events for privacy, terms of service, or
/// other legal agreements. Contains who provided consent, policy/document
/// version, consent action (granted, revoked, updated), and timestamp.
/// Required for legal defensibility and to fulfill user data rights
/// requests. Each event is preserved historicallyâ€”this table acts as an
/// append-only log.
///
/// @namespace Systematic
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discuss_board_consent_records {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// User account giving or updating consent. {@link
  /// discuss_board_user_accounts.id}.
  user_account_id String
  
  /// Type of policy for which consent is being tracked (e.g. 'privacy_policy',
  /// 'terms_of_service', 'marketing_opt_in').
  policy_type String
  
  /// Version or identifier of the policy/legal document the user is consenting
  /// to.
  policy_version String
  
  /// What the event represents: (e.g. 'granted', 'revoked', 'updated').
  consent_action String
  
  /// Optional business notes regarding the consent record, such as rationale
  /// or evidence (IP address, device, etc.).
  description String?
  
  /// Timestamp when this consent record/event was created (UTC).
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  userAccount discuss_board_user_accounts @relation(fields: [user_account_id], references: [id], onDelete: Cascade)
  
  @@index([user_account_id, policy_type, policy_version, created_at], map: "discuss_board_consent_records_user_account_id_policy_t_50e60c81")
}